var search_data = {"index":{"searchIndex":["bundler","bundlererror","cli","binstubs","cache","check","clean","common","config","console","exec","gem","init","inject","install","open","outdated","package","platform","show","update","viz","currentruby","cyclicdependencyerror","definition","depproxy","dependency","deployment","deprecate","deprecatederror","dsl","endpointspecification","env","environment","fetcher","authenticationrequirederror","badauthenticationerror","certificatefailureerror","fallbackerror","sslerror","gemhelper","rake","gemhelpers","geminstaller","gemnotfound","gemfileerror","gemfilelocknotfound","gemfilenotfound","gemspecerror","giterror","graph","graphvizclient","httperror","index","injector","installerror","installhookerror","installer","invalidoption","lazyspecification","lockfileerror","lockfileparser","marshalerror","matchplatform","parallelworkers","threadworker","unixworker","jobhandler","worker","wrappedexception","patherror","productionerror","psych","remotespecification","resolver","specgroup","state","retry","rubydsl","rubyversion","rubyversionmismatch","rubygemsintegration","almostmodern","ancient","future","gem","legacy","gem::sourceindex","modern","moremodern","transitional","runtime","securityerror","settings","sharedhelpers","similaritydetector","source","git","gitcommanderror","gitnotallowederror","gitnotinstallederror","gitproxy","path","installer","rubygems","specset","systemrubyversion","ui","rgproxy","shell","silent","versionconflict","capistrano","gem","dependency","platform","requirement","specification","object","rake","<<()","==()","==()","==()","==()","==()","==()","==()","[]()","[]()","[]()","[]=()","[]=()","__dependencies()","__materialize__()","__swap__()","__swap__()","_groups()","_local_specification()","_make_label()","_patching_gem_dependency_class()","_populate_relations()","_remote_specification()","activate_gem()","activate_platform()","add_github_sources()","add_remote()","add_source()","all()","all_specs()","allow?()","allow_git_ops?()","allow_sudo?()","allowed_in_path()","already_tagged?()","app_cache()","app_cache_dirname()","app_cache_dirname()","app_cache_path()","app_config_path()","append_to()","ask()","ask()","ask_for_spec_from()","attempt()","attempts()","backport_base_dir()","backport_cache_file()","backport_segment_generation()","backport_spec_file()","backport_yaml_initialize()","base_name()","bin_path()","bin_path()","bindir()","binstubs()","branch()","build()","build()","build()","build_args()","build_args=()","build_gem()","build_gem()","built_gem_path()","builtin_gem?()","bundle_path()","bundler_cert_store()","bundler_uri()","cache()","cache()","cache()","cache()","cache()","cache()","cache_path()","cache_path()","cached!()","cached!()","cached?()","cached_built_in_gem()","cached_gem()","cached_path()","cached_revision()","cached_specs()","can_install_parallely?()","chdir()","check()","check_executable_overwrite()","checkout()","clean()","clean()","clean?()","clean_exec()","clean_load_path()","clean_req()","clean_system()","clear_gemspec_cache()","clear_paths()","clear_search_cache()","committed?()","config()","config_map()","configuration()","configure()","configure_gem_home()","configure_gem_home_and_path()","confirm()","confirm()","connection()","console()","contains?()","converge_dependencies()","converge_locals()","converge_locked_specs()","converge_paths()","converge_sources()","copy_to()","create_bundle_path()","current_dependencies()","current_dependencies()","current_env?()","current_platform?()","current_ruby()","debug()","debug()","debug()","debug?()","debug?()","default_attempts()","default_gemfile()","default_gemfile()","default_lockfile()","default_lockfile()","define_task()","definition()","delete()","dependencies()","dependencies_for()","dependencies_to_gemfile()","dependency_api_uri()","dependency_tree()","deq()","diff()","download_gem()","download_gem_from_uri()","each()","empty?()","encode_with()","engine()","engine_version()","enq()","ensure_equivalent_gemfile_and_lockfile()","env()","env()","environment()","eql?()","eql?()","eql?()","eql?()","error()","error()","error_message()","eval_gemfile()","eval_gemspec()","eval_yaml_gemspec()","evaluate()","exec()","executables()","expand()","expand_dependencies()","expanded_dependencies()","extension_dir()","extension_dir_name()","extract_circular_gems()","fail()","fetch()","fetch_all_remote_specs()","fetch_all_remote_specs()","fetch_dependency_remote_specs()","fetch_gem()","fetch_platform()","fetch_platform()","fetch_prerelease_specs()","fetch_remote_specs()","fetch_spec()","fetch_specs()","fetch_specs()","find_conflict_state()","find_gemfile()","find_name()","find_state()","fixup_dependency_types!()","for()","for?()","from_lock()","from_lock()","from_lock()","full_gem_path()","full_name()","full_name()","g()","gem()","gem()","gem_bindir()","gem_cache()","gem_dir()","gem_dir()","gem_from_path()","gem_message()","gem_mirrors()","gem_not_found_message()","gem_path()","gem_platforms()","gem_push?()","gem_version()","gems_size()","gemspec()","gemspec()","gemspec_cached_path()","generate_bin()","generate_bin()","generate_bundler_executable_stubs()","generate_standalone()","generate_standalone_bundler_executable_stubs()","generic()","git()","git()","git_null()","git_present?()","git_proxy()","git_push()","git_retry()","git_source()","git_version()","global_config_file()","group()","groups()","groups()","guard_clean()","handle_conflict()","has_app_cache?()","has_app_cache?()","has_revision_cached?()","hash()","hash()","hash()","hash()","help()","home()","host()","identifier()","ignore_config?()","in_bundle?()","in_locked_deps?()","in_path()","index()","indicate_progress()","inflate()","info()","info()","init()","initialize_copy()","initialize_copy()","inject()","inject()","inject()","inspect()","inspect()","inspect()","install()","install()","install()","install()","install()","install()","install()","install_gem()","install_gem_from_spec()","install_in_parallel()","install_path()","install_path()","install_sequentially()","install_tasks()","installed_specs()","is_bool()","jruby?()","jruby_18?()","jruby_19?()","keep_trying?()","key_for()","last_attempt?()","level()","level()","level=()","level=()","levenshtein_distance()","licenses()","load()","load_config()","load_gemspec()","load_gemspec_uncached()","load_marshal()","load_paths()","load_spec_files()","load_spec_files()","loaded_from()","loaded_specs()","local?()","local_config_file()","local_override!()","local_overrides()","local_search()","local_specification_path()","local_specs()","locations()","lock()","lock()","locked_gems()","lookup()","maglev?()","mark_loaded()","marshal_spec_dir()","match_platform()","matches_spec?()","matching_specs()","materialize()","merge()","method_missing()","method_missing()","method_missing()","method_missing()","mingw?()","mingw_18?()","mingw_19?()","mingw_20?()","mingw_21?()","mirror_for()","missing_specs()","mkdir_p()","mri?()","mri_18?()","mri_19?()","mri_20?()","mri_21?()","mswin?()","name()","name()","name()","name()","name()","name()","name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_gem_lines()","new_platform?()","new_specs()","nondevelopment_dependencies()","none?()","normalize_hash()","normalize_options()","normalize_uri()","normalize_uri()","nothing_changed?()","on_18?()","on_19?()","on_20?()","on_21?()","open()","options()","other_possible?()","outdated()","package()","parse_dependency()","parse_platform()","parse_source()","parse_spec()","patchlevel()","path()","path()","path()","path()","perform_git_push()","platform()","platform()","platforms()","platforms()","post_install_message()","prepare_threads()","prepare_threads()","prepare_workers()","prepare_workers()","preserve_gem_path()","preserve_paths()","pretty_dep()","pretty_values_for()","provides?()","provides?()","prune_cache()","prune_gem_cache()","prune_git_and_path_cache()","pwd()","quiet?()","quiet?()","rbx?()","read_binary()","read_file()","read_file()","ready_to_install?()","redefine_method()","redirected_uri()","relative_path()","release_gem()","remote!()","remote!()","remote_specs()","removed_specs()","replace_bin_path()","replace_entrypoints()","replace_gem()","replace_refresh()","replace_remotes()","report()","repository_subdirectories()","request()","requested_dependencies()","requested_specs()","requested_specs()","require()","require()","require_paths()","required_by()","required_by()","requirement()","requirement()","requires_checkout?()","requires_sudo?()","resolve()","resolve()","resolve()","resolve_conflict()","resolve_for_conflict()","resolve_remotely!()","resolve_with_cache!()","respond_to?()","retry_with_auth()","reverse_rubygems_kernel_mixin()","revision()","revision()","rg_full_gem_path()","rg_loaded_from()","root()","ruby()","ruby?()","ruby_18?()","ruby_19?()","ruby_20?()","ruby_21?()","ruby_engine()","ruby_scope()","ruby_version()","rubygem_push()","rubygems?()","rubygems_index()","rubygems_remotes()","rubygems_source()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run_hooks()","same_version?()","satisfies?()","satisfies_locked_spec?()","say()","search()","search()","search_by_dependency()","search_by_spec()","security_policies()","select_spec()","serialize_gemspecs_in()","set_global()","set_key()","set_local()","set_local!()","settings()","setup()","setup()","setup_cache_all()","setup_cache_all()","setup_environment()","setup_manpath()","sh()","sh_with_code()","shortref_for_display()","shortref_for_path()","should_include?()","show()","silence()","silence()","similar_word_list()","similar_words()","size()","skip_during()","sort!()","sorted()","sorted_sources()","source()","source()","source_root()","source_types()","sources()","sources=()","spec_cache_dirs()","spec_from_gem()","spec_satisfies_dependency?()","specific?()","specs()","specs()","specs()","specs()","specs()","specs()","specs_by_name()","specs_changed?()","specs_for()","specs_path()","start()","start()","state_any?()","status_code()","stop()","stop_threads()","stop_workers()","stop_workers()","strip_leading_spaces()","stub_rubygems()","stub_source_index()","successify()","sudo()","system_bindir()","tag_version()","tell_me()","tmp()","to_a()","to_ary()","to_bool()","to_definition()","to_gemfile()","to_hash()","to_lock()","to_lock()","to_lock()","to_lock()","to_lock()","to_lock()","to_lock()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_specs()","to_yaml_properties()","trace()","trace()","tsort_each_child()","tsort_each_node()","type()","ui()","ui=()","unlock!()","unmet_dependency_names()","update()","update()","upgrade_lockfile()","uri()","uri_escaped()","uri_hash()","use()","use_api()","user_agent()","user_bundle_path()","user_home()","valid_for?()","valid_keys()","validate_ruby!()","version()","version()","version()","version()","version()","version()","version_conflict()","version_message()","version_tag()","viz()","viz()","warn()","warn()","warn_if_root()","well_formed_dependency()","which()","with_build_args()","with_clean_env()","with_clean_git_env()","with_friendly_errors()","with_original_env()","without()","without=()","without_groups_message()","without_groups_messages()","without_groups_messages()","word_wrap()","work()","worker_pool()","write()","x64_mingw?()","x64_mingw_20?()","x64_mingw_21?()","bundle","bundle-config","bundle-config","bundle-exec","bundle-exec","bundle-install","bundle-install","bundle-package","bundle-package","bundle-platform","bundle-platform","bundle-update","bundle-update","bundle","gemfile.5","gemfile.5","executable","executable.standalone","gemfile","gemfile.tt","license.txt.tt","readme.md.tt","rakefile.tt","newgem.tt","extconf.rb.tt","newgem.c.tt","newgem.h.tt","gitignore.tt","newgem.rb.tt","version.rb.tt","newgem.gemspec.tt","rspec.tt","newgem_spec.rb.tt","spec_helper.rb.tt","minitest_helper.rb.tt","test_newgem.rb.tt"],"longSearchIndex":["bundler","bundler::bundlererror","bundler::cli","bundler::cli::binstubs","bundler::cli::cache","bundler::cli::check","bundler::cli::clean","bundler::cli::common","bundler::cli::config","bundler::cli::console","bundler::cli::exec","bundler::cli::gem","bundler::cli::init","bundler::cli::inject","bundler::cli::install","bundler::cli::open","bundler::cli::outdated","bundler::cli::package","bundler::cli::platform","bundler::cli::show","bundler::cli::update","bundler::cli::viz","bundler::currentruby","bundler::cyclicdependencyerror","bundler::definition","bundler::depproxy","bundler::dependency","bundler::deployment","bundler::deprecate","bundler::deprecatederror","bundler::dsl","bundler::endpointspecification","bundler::env","bundler::environment","bundler::fetcher","bundler::fetcher::authenticationrequirederror","bundler::fetcher::badauthenticationerror","bundler::fetcher::certificatefailureerror","bundler::fetcher::fallbackerror","bundler::fetcher::sslerror","bundler::gemhelper","bundler::gemhelper::rake","bundler::gemhelpers","bundler::geminstaller","bundler::gemnotfound","bundler::gemfileerror","bundler::gemfilelocknotfound","bundler::gemfilenotfound","bundler::gemspecerror","bundler::giterror","bundler::graph","bundler::graph::graphvizclient","bundler::httperror","bundler::index","bundler::injector","bundler::installerror","bundler::installhookerror","bundler::installer","bundler::invalidoption","bundler::lazyspecification","bundler::lockfileerror","bundler::lockfileparser","bundler::marshalerror","bundler::matchplatform","bundler::parallelworkers","bundler::parallelworkers::threadworker","bundler::parallelworkers::unixworker","bundler::parallelworkers::unixworker::jobhandler","bundler::parallelworkers::worker","bundler::parallelworkers::worker::wrappedexception","bundler::patherror","bundler::productionerror","bundler::psych","bundler::remotespecification","bundler::resolver","bundler::resolver::specgroup","bundler::resolver::state","bundler::retry","bundler::rubydsl","bundler::rubyversion","bundler::rubyversionmismatch","bundler::rubygemsintegration","bundler::rubygemsintegration::almostmodern","bundler::rubygemsintegration::ancient","bundler::rubygemsintegration::future","bundler::rubygemsintegration::gem","bundler::rubygemsintegration::legacy","bundler::rubygemsintegration::legacy::gem::sourceindex","bundler::rubygemsintegration::modern","bundler::rubygemsintegration::moremodern","bundler::rubygemsintegration::transitional","bundler::runtime","bundler::securityerror","bundler::settings","bundler::sharedhelpers","bundler::similaritydetector","bundler::source","bundler::source::git","bundler::source::git::gitcommanderror","bundler::source::git::gitnotallowederror","bundler::source::git::gitnotinstallederror","bundler::source::git::gitproxy","bundler::source::path","bundler::source::path::installer","bundler::source::rubygems","bundler::specset","bundler::systemrubyversion","bundler::ui","bundler::ui::rgproxy","bundler::ui::shell","bundler::ui::silent","bundler::versionconflict","capistrano","gem","gem::dependency","gem::platform","gem::requirement","gem::specification","object","rake","bundler::index#<<()","bundler::depproxy#==()","bundler::index#==()","bundler::lazyspecification#==()","bundler::rubyversion#==()","bundler::source::git#==()","bundler::source::path#==()","bundler::source::rubygems#==()","bundler::index#[]()","bundler::settings#[]()","bundler::specset#[]()","bundler::settings#[]=()","bundler::specset#[]=()","bundler::resolver::specgroup#__dependencies()","bundler::lazyspecification#__materialize__()","bundler::endpointspecification#__swap__()","bundler::remotespecification#__swap__()","bundler::graph#_groups()","bundler::endpointspecification#_local_specification()","bundler::graph#_make_label()","bundler::graph#_patching_gem_dependency_class()","bundler::graph#_populate_relations()","bundler::remotespecification#_remote_specification()","bundler::resolver#activate_gem()","bundler::resolver::specgroup#activate_platform()","bundler::dsl#add_github_sources()","bundler::source::rubygems#add_remote()","bundler::index#add_source()","bundler::settings#all()","bundler::rubygemsintegration::legacy#all_specs()","bundler::source::git::gitproxy#allow?()","bundler::source::git#allow_git_ops?()","bundler::settings#allow_sudo?()","bundler::source::git::gitproxy#allowed_in_path()","bundler::gemhelper#already_tagged?()","bundler#app_cache()","bundler::source::git#app_cache_dirname()","bundler::source::path#app_cache_dirname()","bundler::source::path#app_cache_path()","bundler#app_config_path()","bundler::injector#append_to()","bundler::ui::shell#ask()","bundler::ui::silent#ask()","bundler::cli::common::ask_for_spec_from()","bundler::retry#attempt()","bundler::retry#attempts()","bundler::rubygemsintegration#backport_base_dir()","bundler::rubygemsintegration#backport_cache_file()","bundler::rubygemsintegration#backport_segment_generation()","bundler::rubygemsintegration#backport_spec_file()","bundler::rubygemsintegration#backport_yaml_initialize()","bundler::source::git#base_name()","bundler#bin_path()","bundler::rubygemsintegration#bin_path()","bundler::endpointspecification#bindir()","bundler::cli#binstubs()","bundler::source::git::gitproxy#branch()","bundler::definition::build()","bundler::index::build()","bundler::rubygemsintegration#build()","bundler::rubygemsintegration#build_args()","bundler::rubygemsintegration#build_args=()","bundler::gemhelper#build_gem()","bundler::rubygemsintegration#build_gem()","bundler::gemhelper#built_gem_path()","bundler::source::rubygems#builtin_gem?()","bundler#bundle_path()","bundler::fetcher#bundler_cert_store()","bundler::fetcher#bundler_uri()","bundler#cache()","bundler::cli#cache()","bundler::runtime#cache()","bundler::source::git#cache()","bundler::source::path#cache()","bundler::source::rubygems#cache()","bundler::runtime#cache_path()","bundler::source::git#cache_path()","bundler::source::path#cached!()","bundler::source::rubygems#cached!()","bundler::source::git#cached?()","bundler::source::rubygems#cached_built_in_gem()","bundler::source::rubygems#cached_gem()","bundler::source::rubygems#cached_path()","bundler::source::git#cached_revision()","bundler::source::rubygems#cached_specs()","bundler::installer#can_install_parallely?()","bundler::sharedhelpers#chdir()","bundler::cli#check()","bundler::geminstaller#check_executable_overwrite()","bundler::source::git::gitproxy#checkout()","bundler::cli#clean()","bundler::runtime#clean()","bundler::gemhelper#clean?()","bundler#clean_exec()","bundler::sharedhelpers#clean_load_path()","bundler::resolver#clean_req()","bundler#clean_system()","bundler#clear_gemspec_cache()","bundler::rubygemsintegration#clear_paths()","bundler::resolver#clear_search_cache()","bundler::gemhelper#committed?()","bundler::cli#config()","bundler::rubygemsintegration#config_map()","bundler::rubygemsintegration#configuration()","bundler#configure()","bundler#configure_gem_home()","bundler#configure_gem_home_and_path()","bundler::ui::shell#confirm()","bundler::ui::silent#confirm()","bundler::fetcher#connection()","bundler::cli#console()","bundler::source::git::gitproxy#contains?()","bundler::definition#converge_dependencies()","bundler::definition#converge_locals()","bundler::definition#converge_locked_specs()","bundler::definition#converge_paths()","bundler::definition#converge_sources()","bundler::source::git::gitproxy#copy_to()","bundler::installer#create_bundle_path()","bundler::definition#current_dependencies()","bundler::environment#current_dependencies()","bundler::dependency#current_env?()","bundler::dependency#current_platform?()","bundler::current_ruby()","bundler::resolver#debug()","bundler::ui::shell#debug()","bundler::ui::silent#debug()","bundler::ui::shell#debug?()","bundler::ui::silent#debug?()","bundler::retry#default_attempts()","bundler#default_gemfile()","bundler::sharedhelpers#default_gemfile()","bundler#default_lockfile()","bundler::sharedhelpers#default_lockfile()","bundler::deployment::define_task()","bundler#definition()","bundler::settings#delete()","bundler::environment#dependencies()","bundler::runtime#dependencies_for()","gem::specification#dependencies_to_gemfile()","bundler::fetcher#dependency_api_uri()","bundler::resolver#dependency_tree()","bundler::parallelworkers::worker#deq()","bundler::rubyversion#diff()","bundler::rubygemsintegration#download_gem()","bundler::fetcher#download_gem_from_uri()","bundler::index#each()","bundler::index#empty?()","gem::dependency#encode_with()","bundler::systemrubyversion#engine()","bundler::systemrubyversion#engine_version()","bundler::parallelworkers::worker#enq()","bundler::definition#ensure_equivalent_gemfile_and_lockfile()","bundler::cli#env()","bundler::dsl#env()","bundler#environment()","bundler::depproxy#eql?()","bundler::source::git#eql?()","bundler::source::path#eql?()","bundler::source::rubygems#eql?()","bundler::ui::shell#error()","bundler::ui::silent#error()","bundler::resolver#error_message()","bundler::dsl#eval_gemfile()","bundler#eval_gemspec()","bundler#eval_yaml_gemspec()","bundler::dsl::evaluate()","bundler::cli#exec()","bundler::endpointspecification#executables()","bundler::source::path#expand()","bundler::definition#expand_dependencies()","bundler::definition#expanded_dependencies()","gem::specification#extension_dir()","bundler::source::git#extension_dir_name()","bundler::specset#extract_circular_gems()","bundler::retry#fail()","bundler::fetcher#fetch()","bundler::fetcher#fetch_all_remote_specs()","bundler::rubygemsintegration#fetch_all_remote_specs()","bundler::fetcher#fetch_dependency_remote_specs()","bundler::source::rubygems#fetch_gem()","bundler::endpointspecification#fetch_platform()","bundler::remotespecification#fetch_platform()","bundler::rubygemsintegration#fetch_prerelease_specs()","bundler::fetcher#fetch_remote_specs()","bundler::fetcher#fetch_spec()","bundler::rubygemsintegration#fetch_specs()","bundler::source::rubygems#fetch_specs()","bundler::resolver#find_conflict_state()","bundler::sharedhelpers#find_gemfile()","bundler::rubygemsintegration::legacy#find_name()","bundler::resolver#find_state()","bundler::definition#fixup_dependency_types!()","bundler::specset#for()","bundler::resolver::specgroup#for?()","bundler::source::git::from_lock()","bundler::source::path::from_lock()","bundler::source::rubygems::from_lock()","gem::specification#full_gem_path()","bundler::lazyspecification#full_name()","bundler::remotespecification#full_name()","bundler::graph::graphvizclient#g()","bundler::cli#gem()","bundler::dsl#gem()","bundler::rubygemsintegration#gem_bindir()","bundler::rubygemsintegration#gem_cache()","bundler::rubygemsintegration#gem_dir()","gem::specification#gem_dir()","bundler::rubygemsintegration#gem_from_path()","bundler::resolver#gem_message()","bundler::settings#gem_mirrors()","bundler::cli::common::gem_not_found_message()","bundler::rubygemsintegration#gem_path()","bundler::dependency#gem_platforms()","bundler::gemhelper#gem_push?()","bundler::systemrubyversion#gem_version()","bundler::resolver#gems_size()","bundler::dsl#gemspec()","bundler::gemhelper#gemspec()","bundler::fetcher#gemspec_cached_path()","bundler::source::path#generate_bin()","bundler::source::path::installer#generate_bin()","bundler::installer#generate_bundler_executable_stubs()","bundler::installer#generate_standalone()","bundler::installer#generate_standalone_bundler_executable_stubs()","bundler::gemhelpers#generic()","bundler::dsl#git()","bundler::source::git::gitproxy#git()","bundler::source::git::gitproxy#git_null()","bundler#git_present?()","bundler::source::git#git_proxy()","bundler::gemhelper#git_push()","bundler::source::git::gitproxy#git_retry()","bundler::dsl#git_source()","gem::specification#git_version()","bundler::settings#global_config_file()","bundler::dsl#group()","bundler::definition#groups()","gem::specification#groups()","bundler::gemhelper#guard_clean()","bundler::resolver#handle_conflict()","bundler::source::git#has_app_cache?()","bundler::source::path#has_app_cache?()","bundler::source::git::gitproxy#has_revision_cached?()","bundler::depproxy#hash()","bundler::source::path#hash()","bundler::source::rubygems#hash()","gem::platform#hash()","bundler::cli#help()","bundler#home()","bundler::rubyversion#host()","bundler::lazyspecification#identifier()","bundler::settings#ignore_config?()","bundler::sharedhelpers#in_bundle?()","bundler::definition#in_locked_deps?()","bundler::source::git::gitproxy#in_path()","bundler::definition#index()","bundler::resolver#indicate_progress()","bundler::rubygemsintegration#inflate()","bundler::ui::shell#info()","bundler::ui::silent#info()","bundler::cli#init()","bundler::index#initialize_copy()","bundler::resolver::specgroup#initialize_copy()","bundler::cli#inject()","bundler::injector#inject()","bundler::injector::inject()","bundler::environment#inspect()","bundler::fetcher#inspect()","bundler::index#inspect()","bundler::cli#install()","bundler::cli::package#install()","bundler::gemhelper#install()","bundler::installer::install()","bundler::source::git#install()","bundler::source::path#install()","bundler::source::rubygems#install()","bundler::gemhelper#install_gem()","bundler::installer#install_gem_from_spec()","bundler::installer#install_in_parallel()","bundler#install_path()","bundler::source::git#install_path()","bundler::installer#install_sequentially()","bundler::gemhelper#install_tasks()","bundler::source::rubygems#installed_specs()","bundler::settings#is_bool()","bundler::currentruby#jruby?()","bundler::currentruby#jruby_18?()","bundler::currentruby#jruby_19?()","bundler::retry#keep_trying?()","bundler::settings#key_for()","bundler::retry#last_attempt?()","bundler::ui::shell#level()","bundler::ui::silent#level()","bundler::ui::shell#level=()","bundler::ui::silent#level=()","bundler::similaritydetector#levenshtein_distance()","bundler::cli#licenses()","bundler#load()","bundler::settings#load_config()","bundler#load_gemspec()","bundler#load_gemspec_uncached()","bundler#load_marshal()","gem::specification#load_paths()","bundler::source::git#load_spec_files()","bundler::source::path#load_spec_files()","gem::specification#loaded_from()","bundler::rubygemsintegration#loaded_specs()","bundler::source::git#local?()","bundler::settings#local_config_file()","bundler::source::git#local_override!()","bundler::settings#local_overrides()","bundler::index#local_search()","bundler::endpointspecification#local_specification_path()","bundler::source::path#local_specs()","bundler::settings#locations()","bundler::definition#lock()","bundler::environment#lock()","bundler#locked_gems()","bundler::specset#lookup()","bundler::currentruby#maglev?()","bundler::rubygemsintegration#mark_loaded()","bundler::rubygemsintegration#marshal_spec_dir()","bundler::matchplatform#match_platform()","gem::dependency#matches_spec?()","bundler::graph#matching_specs()","bundler::specset#materialize()","bundler::specset#merge()","bundler::depproxy#method_missing()","bundler::dsl#method_missing()","bundler::lazyspecification#method_missing()","bundler::remotespecification#method_missing()","bundler::currentruby#mingw?()","bundler::currentruby#mingw_18?()","bundler::currentruby#mingw_19?()","bundler::currentruby#mingw_20?()","bundler::currentruby#mingw_21?()","bundler::source::mirror_for()","bundler::definition#missing_specs()","bundler#mkdir_p()","bundler::currentruby#mri?()","bundler::currentruby#mri_18?()","bundler::currentruby#mri_19?()","bundler::currentruby#mri_20?()","bundler::currentruby#mri_21?()","bundler::currentruby#mswin?()","bundler::depproxy#name()","bundler::gemhelper#name()","bundler::resolver::specgroup#name()","bundler::resolver::state#name()","bundler::source::git#name()","bundler::source::path#name()","bundler::source::rubygems#name()","bundler::cli::new()","bundler::cli::binstubs::new()","bundler::cli::cache::new()","bundler::cli::check::new()","bundler::cli::clean::new()","bundler::cli::config::new()","bundler::cli::console::new()","bundler::cli::exec::new()","bundler::cli::gem::new()","bundler::cli::init::new()","bundler::cli::inject::new()","bundler::cli::install::new()","bundler::cli::open::new()","bundler::cli::outdated::new()","bundler::cli::package::new()","bundler::cli::platform::new()","bundler::cli::show::new()","bundler::cli::update::new()","bundler::cli::viz::new()","bundler::definition::new()","bundler::depproxy::new()","bundler::dependency::new()","bundler::dsl::new()","bundler::endpointspecification::new()","bundler::environment::new()","bundler::fetcher::new()","bundler::fetcher::authenticationrequirederror::new()","bundler::fetcher::badauthenticationerror::new()","bundler::fetcher::certificatefailureerror::new()","bundler::fetcher::sslerror::new()","bundler::gemhelper::new()","bundler::graph::new()","bundler::graph::graphvizclient::new()","bundler::index::new()","bundler::injector::new()","bundler::lazyspecification::new()","bundler::lockfileparser::new()","bundler::parallelworkers::unixworker::new()","bundler::parallelworkers::worker::new()","bundler::parallelworkers::worker::wrappedexception::new()","bundler::remotespecification::new()","bundler::resolver::new()","bundler::resolver::specgroup::new()","bundler::retry::new()","bundler::rubyversion::new()","bundler::rubygemsintegration::legacy::new()","bundler::settings::new()","bundler::similaritydetector::new()","bundler::source::git::new()","bundler::source::git::gitcommanderror::new()","bundler::source::git::gitnotallowederror::new()","bundler::source::git::gitnotinstallederror::new()","bundler::source::git::gitproxy::new()","bundler::source::path::new()","bundler::source::path::installer::new()","bundler::source::rubygems::new()","bundler::specset::new()","bundler::systemrubyversion::new()","bundler::ui::rgproxy::new()","bundler::ui::shell::new()","bundler::versionconflict::new()","bundler::injector#new_gem_lines()","bundler::definition#new_platform?()","bundler::definition#new_specs()","gem::specification#nondevelopment_dependencies()","gem::requirement#none?()","bundler::dsl#normalize_hash()","bundler::dsl#normalize_options()","bundler::settings#normalize_uri()","bundler::source::rubygems#normalize_uri()","bundler::definition#nothing_changed?()","bundler::currentruby#on_18?()","bundler::currentruby#on_19?()","bundler::currentruby#on_20?()","bundler::currentruby#on_21?()","bundler::cli#open()","bundler::source::rubygems#options()","bundler::resolver#other_possible?()","bundler::cli#outdated()","bundler::cli#package()","bundler::lockfileparser#parse_dependency()","bundler::lockfileparser#parse_platform()","bundler::lockfileparser#parse_source()","bundler::lockfileparser#parse_spec()","bundler::systemrubyversion#patchlevel()","bundler::dsl#path()","bundler::rubygemsintegration#path()","bundler::settings#path()","bundler::source::git#path()","bundler::gemhelper#perform_git_push()","bundler::cli#platform()","bundler::dsl#platform()","bundler::dsl#platforms()","bundler::rubygemsintegration#platforms()","bundler::endpointspecification#post_install_message()","bundler::parallelworkers::unixworker#prepare_threads()","bundler::parallelworkers::worker#prepare_threads()","bundler::parallelworkers::threadworker#prepare_workers()","bundler::parallelworkers::unixworker#prepare_workers()","bundler::preserve_gem_path()","bundler::rubygemsintegration#preserve_paths()","bundler::definition#pretty_dep()","bundler::settings#pretty_values_for()","bundler::rubygemsintegration#provides?()","bundler::rubygemsintegration::provides?()","bundler::runtime#prune_cache()","bundler::runtime#prune_gem_cache()","bundler::runtime#prune_git_and_path_cache()","bundler::sharedhelpers#pwd()","bundler::ui::shell#quiet?()","bundler::ui::silent#quiet?()","bundler::currentruby#rbx?()","bundler::rubygemsintegration#read_binary()","bundler#read_file()","bundler::env#read_file()","bundler::installer#ready_to_install?()","bundler::rubygemsintegration#redefine_method()","bundler::fetcher#redirected_uri()","bundler::source::path#relative_path()","bundler::gemhelper#release_gem()","bundler::source::path#remote!()","bundler::source::rubygems#remote!()","bundler::source::rubygems#remote_specs()","bundler::definition#removed_specs()","bundler::rubygemsintegration#replace_bin_path()","bundler::rubygemsintegration#replace_entrypoints()","bundler::rubygemsintegration#replace_gem()","bundler::rubygemsintegration#replace_refresh()","bundler::source::rubygems#replace_remotes()","bundler::env#report()","bundler::rubygemsintegration#repository_subdirectories()","bundler::fetcher#request()","bundler::definition#requested_dependencies()","bundler::definition#requested_specs()","bundler::environment#requested_specs()","bundler#require()","bundler::runtime#require()","bundler::endpointspecification#require_paths()","gem::dependency#required_by()","gem::specification#required_by()","bundler::depproxy#requirement()","gem::dependency#requirement()","bundler::source::git#requires_checkout?()","bundler#requires_sudo?()","bundler::definition#resolve()","bundler::resolver#resolve()","bundler::resolver::resolve()","bundler::resolver#resolve_conflict()","bundler::resolver#resolve_for_conflict()","bundler::definition#resolve_remotely!()","bundler::definition#resolve_with_cache!()","bundler::lazyspecification#respond_to?()","bundler::fetcher#retry_with_auth()","bundler::rubygemsintegration#reverse_rubygems_kernel_mixin()","bundler::source::git#revision()","bundler::source::git::gitproxy#revision()","gem::specification#rg_full_gem_path()","gem::specification#rg_loaded_from()","bundler#root()","bundler::rubydsl#ruby()","bundler::currentruby#ruby?()","bundler::currentruby#ruby_18?()","bundler::currentruby#ruby_19?()","bundler::currentruby#ruby_20?()","bundler::currentruby#ruby_21?()","bundler::rubygemsintegration#ruby_engine()","bundler#ruby_scope()","bundler#ruby_version()","bundler::gemhelper#rubygem_push()","bundler::fetcher#rubygems?()","bundler::definition#rubygems_index()","bundler::definition#rubygems_remotes()","bundler::dsl#rubygems_source()","bundler::cli::binstubs#run()","bundler::cli::cache#run()","bundler::cli::check#run()","bundler::cli::clean#run()","bundler::cli::config#run()","bundler::cli::console#run()","bundler::cli::exec#run()","bundler::cli::gem#run()","bundler::cli::init#run()","bundler::cli::inject#run()","bundler::cli::install#run()","bundler::cli::open#run()","bundler::cli::outdated#run()","bundler::cli::package#run()","bundler::cli::platform#run()","bundler::cli::show#run()","bundler::cli::update#run()","bundler::cli::viz#run()","bundler::graph::graphvizclient#run()","bundler::installer#run()","bundler::retry#run()","bundler::source::path#run_hooks()","bundler::index#same_version?()","bundler::lazyspecification#satisfies?()","bundler::definition#satisfies_locked_spec?()","bundler::ui::rgproxy#say()","bundler::index#search()","bundler::resolver#search()","bundler::index#search_by_dependency()","bundler::index#search_by_spec()","bundler::rubygemsintegration#security_policies()","bundler::cli::common::select_spec()","bundler::source::git#serialize_gemspecs_in()","bundler::settings#set_global()","bundler::settings#set_key()","bundler::settings#set_local()","bundler::source::git#set_local!()","bundler#settings()","bundler#setup()","bundler::runtime#setup()","bundler::cli::cache#setup_cache_all()","bundler::cli::package#setup_cache_all()","bundler::runtime#setup_environment()","bundler::runtime#setup_manpath()","bundler::gemhelper#sh()","bundler::gemhelper#sh_with_code()","bundler::source::git#shortref_for_display()","bundler::source::git#shortref_for_path()","bundler::dependency#should_include?()","bundler::cli#show()","bundler::ui::shell#silence()","bundler::ui::silent#silence()","bundler::similaritydetector#similar_word_list()","bundler::similaritydetector#similar_words()","bundler::index#size()","bundler::deprecate::skip_during()","bundler::specset#sort!()","bundler::specset#sorted()","bundler::definition#sorted_sources()","bundler::dsl#source()","bundler::resolver::specgroup#source()","bundler::cli::source_root()","bundler::index#source_types()","bundler::rubygemsintegration#sources()","bundler::rubygemsintegration#sources=()","bundler::rubygemsintegration#spec_cache_dirs()","bundler::rubygemsintegration#spec_from_gem()","bundler::index#spec_satisfies_dependency?()","bundler::dependency#specific?()","bundler::definition#specs()","bundler::environment#specs()","bundler::fetcher#specs()","bundler::source::git#specs()","bundler::source::path#specs()","bundler::source::rubygems#specs()","bundler::index#specs_by_name()","bundler::definition#specs_changed?()","bundler::definition#specs_for()","bundler#specs_path()","bundler::cli::start()","bundler::resolver#start()","bundler::resolver#state_any?()","bundler::bundlererror::status_code()","bundler::parallelworkers::worker#stop()","bundler::parallelworkers::worker#stop_threads()","bundler::parallelworkers::unixworker#stop_workers()","bundler::parallelworkers::worker#stop_workers()","bundler::ui::shell#strip_leading_spaces()","bundler::rubygemsintegration::legacy#stub_rubygems()","bundler::rubygemsintegration#stub_source_index()","bundler::resolver#successify()","bundler#sudo()","bundler#system_bindir()","bundler::gemhelper#tag_version()","bundler::ui::shell#tell_me()","bundler#tmp()","bundler::specset#to_a()","bundler::lazyspecification#to_ary()","bundler::settings#to_bool()","bundler::dsl#to_definition()","gem::specification#to_gemfile()","bundler::specset#to_hash()","bundler::definition#to_lock()","bundler::dependency#to_lock()","bundler::lazyspecification#to_lock()","bundler::source::git#to_lock()","bundler::source::path#to_lock()","bundler::source::rubygems#to_lock()","gem::dependency#to_lock()","bundler::depproxy#to_s()","bundler::lazyspecification#to_s()","bundler::resolver::specgroup#to_s()","bundler::rubyversion#to_s()","bundler::source::git#to_s()","bundler::source::path#to_s()","bundler::source::rubygems#to_s()","bundler::resolver::specgroup#to_specs()","gem::dependency#to_yaml_properties()","bundler::ui::shell#trace()","bundler::ui::silent#trace()","bundler::specset#tsort_each_child()","bundler::specset#tsort_each_node()","bundler::depproxy#type()","bundler#ui()","bundler::rubygemsintegration#ui=()","bundler::source::git#unlock!()","bundler::index#unmet_dependency_names()","bundler::cli#update()","bundler::environment#update()","bundler#upgrade_lockfile()","bundler::fetcher#uri()","bundler::source::git::gitproxy#uri_escaped()","bundler::source::git#uri_hash()","bundler::index#use()","bundler::fetcher#use_api()","bundler::fetcher#user_agent()","bundler#user_bundle_path()","bundler::rubygemsintegration#user_home()","bundler::specset#valid_for?()","bundler::dsl#valid_keys()","bundler::definition#validate_ruby!()","bundler::cli#version()","bundler::gemhelper#version()","bundler::resolver::specgroup#version()","bundler::rubygemsintegration::version()","bundler::rubygemsintegration#version()","bundler::systemrubyversion#version()","bundler::resolver#version_conflict()","bundler::source#version_message()","bundler::gemhelper#version_tag()","bundler::cli#viz()","bundler::graph#viz()","bundler::ui::shell#warn()","bundler::ui::silent#warn()","bundler::cli::install#warn_if_root()","bundler::fetcher#well_formed_dependency()","bundler#which()","bundler::rubygemsintegration#with_build_args()","bundler#with_clean_env()","bundler::sharedhelpers#with_clean_git_env()","bundler::with_friendly_errors()","bundler#with_original_env()","bundler::settings#without()","bundler::settings#without=()","bundler::cli::common::without_groups_message()","bundler::cli::install#without_groups_messages()","bundler::cli::update#without_groups_messages()","bundler::ui::shell#word_wrap()","bundler::parallelworkers::unixworker::jobhandler#work()","bundler::parallelworkers::worker_pool()","bundler::env#write()","bundler::currentruby#x64_mingw?()","bundler::currentruby#x64_mingw_20?()","bundler::currentruby#x64_mingw_21?()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["Bundler","","Bundler.html","","<p>Some versions of the Bundler 1.1 RC series introduced corrupted lockfiles.\nThere were two major problems: …\n"],["Bundler::BundlerError","","Bundler/BundlerError.html","",""],["Bundler::CLI","","Bundler/CLI.html","",""],["Bundler::CLI::Binstubs","","Bundler/CLI/Binstubs.html","",""],["Bundler::CLI::Cache","","Bundler/CLI/Cache.html","",""],["Bundler::CLI::Check","","Bundler/CLI/Check.html","",""],["Bundler::CLI::Clean","","Bundler/CLI/Clean.html","",""],["Bundler::CLI::Common","","Bundler/CLI/Common.html","",""],["Bundler::CLI::Config","","Bundler/CLI/Config.html","",""],["Bundler::CLI::Console","","Bundler/CLI/Console.html","",""],["Bundler::CLI::Exec","","Bundler/CLI/Exec.html","",""],["Bundler::CLI::Gem","","Bundler/CLI/Gem.html","",""],["Bundler::CLI::Init","","Bundler/CLI/Init.html","",""],["Bundler::CLI::Inject","","Bundler/CLI/Inject.html","",""],["Bundler::CLI::Install","","Bundler/CLI/Install.html","",""],["Bundler::CLI::Open","","Bundler/CLI/Open.html","",""],["Bundler::CLI::Outdated","","Bundler/CLI/Outdated.html","",""],["Bundler::CLI::Package","","Bundler/CLI/Package.html","",""],["Bundler::CLI::Platform","","Bundler/CLI/Platform.html","",""],["Bundler::CLI::Show","","Bundler/CLI/Show.html","",""],["Bundler::CLI::Update","","Bundler/CLI/Update.html","",""],["Bundler::CLI::Viz","","Bundler/CLI/Viz.html","",""],["Bundler::CurrentRuby","","Bundler/CurrentRuby.html","",""],["Bundler::CyclicDependencyError","","Bundler/CyclicDependencyError.html","",""],["Bundler::Definition","","Bundler/Definition.html","",""],["Bundler::DepProxy","","Bundler/DepProxy.html","",""],["Bundler::Dependency","","Bundler/Dependency.html","",""],["Bundler::Deployment","","Bundler/Deployment.html","",""],["Bundler::Deprecate","","Bundler/Deprecate.html","",""],["Bundler::DeprecatedError","","Bundler/DeprecatedError.html","",""],["Bundler::Dsl","","Bundler/Dsl.html","",""],["Bundler::EndpointSpecification","","Bundler/EndpointSpecification.html","","<p>used for Creating Specifications from the Gemcutter Endpoint\n"],["Bundler::Env","","Bundler/Env.html","",""],["Bundler::Environment","","Bundler/Environment.html","",""],["Bundler::Fetcher","","Bundler/Fetcher.html","","<p>Handles all the fetching with the rubygems server\n"],["Bundler::Fetcher::AuthenticationRequiredError","","Bundler/Fetcher/AuthenticationRequiredError.html","","<p>This error is raised if HTTP authentication is required, but not provided.\n"],["Bundler::Fetcher::BadAuthenticationError","","Bundler/Fetcher/BadAuthenticationError.html","","<p>This error is raised if HTTP authentication is provided, but incorrect.\n"],["Bundler::Fetcher::CertificateFailureError","","Bundler/Fetcher/CertificateFailureError.html","","<p>This is the error raised if OpenSSL fails the cert verification\n"],["Bundler::Fetcher::FallbackError","","Bundler/Fetcher/FallbackError.html","","<p>This error is raised if the API returns a 413 (only printed in verbose)\n"],["Bundler::Fetcher::SSLError","","Bundler/Fetcher/SSLError.html","","<p>This is the error raised when a source is HTTPS and OpenSSL didn’t load\n"],["Bundler::GemHelper","","Bundler/GemHelper.html","",""],["Bundler::GemHelper::Rake","","Bundler/GemHelper/Rake.html","",""],["Bundler::GemHelpers","","Bundler/GemHelpers.html","",""],["Bundler::GemInstaller","","Bundler/GemInstaller.html","",""],["Bundler::GemNotFound","","Bundler/GemNotFound.html","",""],["Bundler::GemfileError","","Bundler/GemfileError.html","",""],["Bundler::GemfileLockNotFound","","Bundler/GemfileLockNotFound.html","",""],["Bundler::GemfileNotFound","","Bundler/GemfileNotFound.html","",""],["Bundler::GemspecError","","Bundler/GemspecError.html","",""],["Bundler::GitError","","Bundler/GitError.html","",""],["Bundler::Graph","","Bundler/Graph.html","",""],["Bundler::Graph::GraphVizClient","","Bundler/Graph/GraphVizClient.html","",""],["Bundler::HTTPError","","Bundler/HTTPError.html","",""],["Bundler::Index","","Bundler/Index.html","",""],["Bundler::Injector","","Bundler/Injector.html","",""],["Bundler::InstallError","","Bundler/InstallError.html","",""],["Bundler::InstallHookError","","Bundler/InstallHookError.html","",""],["Bundler::Installer","","Bundler/Installer.html","",""],["Bundler::InvalidOption","","Bundler/InvalidOption.html","",""],["Bundler::LazySpecification","","Bundler/LazySpecification.html","",""],["Bundler::LockfileError","","Bundler/LockfileError.html","",""],["Bundler::LockfileParser","","Bundler/LockfileParser.html","",""],["Bundler::MarshalError","","Bundler/MarshalError.html","",""],["Bundler::MatchPlatform","","Bundler/MatchPlatform.html","",""],["Bundler::ParallelWorkers","","Bundler/ParallelWorkers.html","",""],["Bundler::ParallelWorkers::ThreadWorker","","Bundler/ParallelWorkers/ThreadWorker.html","",""],["Bundler::ParallelWorkers::UnixWorker","","Bundler/ParallelWorkers/UnixWorker.html","","<p>UnixWorker is used only on platforms where fork is available. The way this\ncode works is, it forks a …\n"],["Bundler::ParallelWorkers::UnixWorker::JobHandler","","Bundler/ParallelWorkers/UnixWorker/JobHandler.html","",""],["Bundler::ParallelWorkers::Worker","","Bundler/ParallelWorkers/Worker.html","",""],["Bundler::ParallelWorkers::Worker::WrappedException","","Bundler/ParallelWorkers/Worker/WrappedException.html","",""],["Bundler::PathError","","Bundler/PathError.html","",""],["Bundler::ProductionError","","Bundler/ProductionError.html","",""],["Bundler::Psych","","Bundler/Psych.html","",""],["Bundler::RemoteSpecification","","Bundler/RemoteSpecification.html","","<p>Represents a lazily loaded gem specification, where the full specification\nis on the source server in …\n"],["Bundler::Resolver","","Bundler/Resolver.html","",""],["Bundler::Resolver::SpecGroup","","Bundler/Resolver/SpecGroup.html","",""],["Bundler::Resolver::State","","Bundler/Resolver/State.html","",""],["Bundler::Retry","","Bundler/Retry.html","","<p>General purpose class for retrying code that may fail\n"],["Bundler::RubyDsl","","Bundler/RubyDsl.html","",""],["Bundler::RubyVersion","","Bundler/RubyVersion.html","",""],["Bundler::RubyVersionMismatch","","Bundler/RubyVersionMismatch.html","",""],["Bundler::RubygemsIntegration","","Bundler/RubygemsIntegration.html","",""],["Bundler::RubygemsIntegration::AlmostModern","","Bundler/RubygemsIntegration/AlmostModern.html","",""],["Bundler::RubygemsIntegration::Ancient","","Bundler/RubygemsIntegration/Ancient.html","",""],["Bundler::RubygemsIntegration::Future","","Bundler/RubygemsIntegration/Future.html","",""],["Bundler::RubygemsIntegration::Gem","","Bundler/RubygemsIntegration/Gem.html","",""],["Bundler::RubygemsIntegration::Legacy","","Bundler/RubygemsIntegration/Legacy.html","","<p>Rubygems 1.4 through 1.6\n"],["Bundler::RubygemsIntegration::Legacy::Gem::SourceIndex","","Bundler/RubygemsIntegration/Legacy/Gem/SourceIndex.html","",""],["Bundler::RubygemsIntegration::Modern","","Bundler/RubygemsIntegration/Modern.html","",""],["Bundler::RubygemsIntegration::MoreModern","","Bundler/RubygemsIntegration/MoreModern.html","",""],["Bundler::RubygemsIntegration::Transitional","","Bundler/RubygemsIntegration/Transitional.html","",""],["Bundler::Runtime","","Bundler/Runtime.html","",""],["Bundler::SecurityError","","Bundler/SecurityError.html","",""],["Bundler::Settings","","Bundler/Settings.html","",""],["Bundler::SharedHelpers","","Bundler/SharedHelpers.html","",""],["Bundler::SimilarityDetector","","Bundler/SimilarityDetector.html","",""],["Bundler::Source","","Bundler/Source.html","",""],["Bundler::Source::Git","","Bundler/Source/Git.html","",""],["Bundler::Source::Git::GitCommandError","","Bundler/Source/Git/GitCommandError.html","",""],["Bundler::Source::Git::GitNotAllowedError","","Bundler/Source/Git/GitNotAllowedError.html","",""],["Bundler::Source::Git::GitNotInstalledError","","Bundler/Source/Git/GitNotInstalledError.html","",""],["Bundler::Source::Git::GitProxy","","Bundler/Source/Git/GitProxy.html","","<p>The GitProxy is responsible to interact with git repositories. All actions\nrequired by the Git source …\n"],["Bundler::Source::Path","","Bundler/Source/Path.html","",""],["Bundler::Source::Path::Installer","","Bundler/Source/Path/Installer.html","",""],["Bundler::Source::Rubygems","","Bundler/Source/Rubygems.html","",""],["Bundler::SpecSet","","Bundler/SpecSet.html","",""],["Bundler::SystemRubyVersion","","Bundler/SystemRubyVersion.html","","<p>A subclass of RubyVersion that implements version, engine and\nengine_version based upon the current information …\n"],["Bundler::UI","","Bundler/UI.html","",""],["Bundler::UI::RGProxy","","Bundler/UI/RGProxy.html","",""],["Bundler::UI::Shell","","Bundler/UI/Shell.html","",""],["Bundler::UI::Silent","","Bundler/UI/Silent.html","",""],["Bundler::VersionConflict","","Bundler/VersionConflict.html","","<p>Internal errors, should be rescued\n"],["Capistrano","","Capistrano.html","",""],["Gem","","Gem.html","","<p>Extending Gem classes to add necessary tracking information\n"],["Gem::Dependency","","Gem/Dependency.html","",""],["Gem::Platform","","Gem/Platform.html","",""],["Gem::Requirement","","Gem/Requirement.html","",""],["Gem::Specification","","Gem/Specification.html","",""],["Object","","Object.html","",""],["Rake","","Rake.html","",""],["<<","Bundler::Index","Bundler/Index.html#method-i-3C-3C","(spec)",""],["==","Bundler::DepProxy","Bundler/DepProxy.html#method-i-3D-3D","(o)",""],["==","Bundler::Index","Bundler/Index.html#method-i-3D-3D","(o)",""],["==","Bundler::LazySpecification","Bundler/LazySpecification.html#method-i-3D-3D","(other)",""],["==","Bundler::RubyVersion","Bundler/RubyVersion.html#method-i-3D-3D","(other)",""],["==","Bundler::Source::Git","Bundler/Source/Git.html#method-i-3D-3D","(o)",""],["==","Bundler::Source::Path","Bundler/Source/Path.html#method-i-3D-3D","(o)",""],["==","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-3D-3D","(o)",""],["[]","Bundler::Index","Bundler/Index.html#method-i-5B-5D","(query, base = nil)",""],["[]","Bundler::Settings","Bundler/Settings.html#method-i-5B-5D","(key)",""],["[]","Bundler::SpecSet","Bundler/SpecSet.html#method-i-5B-5D","(key)",""],["[]=","Bundler::Settings","Bundler/Settings.html#method-i-5B-5D-3D","(key, value)",""],["[]=","Bundler::SpecSet","Bundler/SpecSet.html#method-i-5B-5D-3D","(key, value)",""],["__dependencies","Bundler::Resolver::SpecGroup","Bundler/Resolver/SpecGroup.html#method-i-__dependencies","()",""],["__materialize__","Bundler::LazySpecification","Bundler/LazySpecification.html#method-i-__materialize__","()",""],["__swap__","Bundler::EndpointSpecification","Bundler/EndpointSpecification.html#method-i-__swap__","(spec)",""],["__swap__","Bundler::RemoteSpecification","Bundler/RemoteSpecification.html#method-i-__swap__","(spec)","<p>Because Rubyforge cannot be trusted to provide valid specifications once\nthe remote gem is downloaded, …\n"],["_groups","Bundler::Graph","Bundler/Graph.html#method-i-_groups","()",""],["_local_specification","Bundler::EndpointSpecification","Bundler/EndpointSpecification.html#method-i-_local_specification","()",""],["_make_label","Bundler::Graph","Bundler/Graph.html#method-i-_make_label","(symbol_or_string_or_dependency, element_type)",""],["_patching_gem_dependency_class","Bundler::Graph","Bundler/Graph.html#method-i-_patching_gem_dependency_class","()",""],["_populate_relations","Bundler::Graph","Bundler/Graph.html#method-i-_populate_relations","()",""],["_remote_specification","Bundler::RemoteSpecification","Bundler/RemoteSpecification.html#method-i-_remote_specification","()",""],["activate_gem","Bundler::Resolver","Bundler/Resolver.html#method-i-activate_gem","(reqs, activated, requirement, current)",""],["activate_platform","Bundler::Resolver::SpecGroup","Bundler/Resolver/SpecGroup.html#method-i-activate_platform","(platform)",""],["add_github_sources","Bundler::Dsl","Bundler/Dsl.html#method-i-add_github_sources","()",""],["add_remote","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-add_remote","(source)",""],["add_source","Bundler::Index","Bundler/Index.html#method-i-add_source","(index)",""],["all","Bundler::Settings","Bundler/Settings.html#method-i-all","()",""],["all_specs","Bundler::RubygemsIntegration::Legacy","Bundler/RubygemsIntegration/Legacy.html#method-i-all_specs","()",""],["allow?","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-allow-3F","()",""],["allow_git_ops?","Bundler::Source::Git","Bundler/Source/Git.html#method-i-allow_git_ops-3F","()",""],["allow_sudo?","Bundler::Settings","Bundler/Settings.html#method-i-allow_sudo-3F","()",""],["allowed_in_path","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-allowed_in_path","()",""],["already_tagged?","Bundler::GemHelper","Bundler/GemHelper.html#method-i-already_tagged-3F","()",""],["app_cache","Bundler","Bundler.html#method-i-app_cache","(custom_path = nil)",""],["app_cache_dirname","Bundler::Source::Git","Bundler/Source/Git.html#method-i-app_cache_dirname","()",""],["app_cache_dirname","Bundler::Source::Path","Bundler/Source/Path.html#method-i-app_cache_dirname","()",""],["app_cache_path","Bundler::Source::Path","Bundler/Source/Path.html#method-i-app_cache_path","(custom_path = nil)",""],["app_config_path","Bundler","Bundler.html#method-i-app_config_path","()",""],["append_to","Bundler::Injector","Bundler/Injector.html#method-i-append_to","(gemfile_path)",""],["ask","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-ask","(msg)",""],["ask","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-ask","(message)",""],["ask_for_spec_from","Bundler::CLI::Common","Bundler/CLI/Common.html#method-c-ask_for_spec_from","(specs)",""],["attempt","Bundler::Retry","Bundler/Retry.html#method-i-attempt","(&block)",""],["attempts","Bundler::Retry","Bundler/Retry.html#method-i-attempts","(&block)",""],["backport_base_dir","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-backport_base_dir","()","<p>This backports base_dir which replaces installation path Rubygems 1.8+\n"],["backport_cache_file","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-backport_cache_file","()",""],["backport_segment_generation","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-backport_segment_generation","()","<p>This backports the correct segment generation code from Rubygems 1.4+ by\nmonkeypatching it into the method …\n"],["backport_spec_file","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-backport_spec_file","()",""],["backport_yaml_initialize","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-backport_yaml_initialize","()","<p>This backport fixes the marshaling of @segments.\n"],["base_name","Bundler::Source::Git","Bundler/Source/Git.html#method-i-base_name","()",""],["bin_path","Bundler","Bundler.html#method-i-bin_path","()","<p>Returns absolute location of where binstubs are installed to.\n"],["bin_path","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-bin_path","(gem, bin, ver)",""],["bindir","Bundler::EndpointSpecification","Bundler/EndpointSpecification.html#method-i-bindir","()","<p>needed for bundle clean\n"],["binstubs","Bundler::CLI","Bundler/CLI.html#method-i-binstubs","(*gems)",""],["branch","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-branch","()",""],["build","Bundler::Definition","Bundler/Definition.html#method-c-build","(gemfile, lockfile, unlock)","<p>Given a gemfile and lockfile creates a Bundler definition\n<p>@param gemfile [Pathname] Path to Gemfile @param …\n"],["build","Bundler::Index","Bundler/Index.html#method-c-build","()",""],["build","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-build","(spec, skip_validation = false)",""],["build_args","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-build_args","()",""],["build_args=","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-build_args-3D","(args)",""],["build_gem","Bundler::GemHelper","Bundler/GemHelper.html#method-i-build_gem","()",""],["build_gem","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-build_gem","(gem_dir, spec)",""],["built_gem_path","Bundler::GemHelper","Bundler/GemHelper.html#method-i-built_gem_path","()",""],["builtin_gem?","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-builtin_gem-3F","(spec)",""],["bundle_path","Bundler","Bundler.html#method-i-bundle_path","()","<p>Returns absolute path of where gems are installed on the filesystem.\n"],["bundler_cert_store","Bundler::Fetcher","Bundler/Fetcher.html#method-i-bundler_cert_store","()",""],["bundler_uri","Bundler::Fetcher","Bundler/Fetcher.html#method-i-bundler_uri","()",""],["cache","Bundler","Bundler.html#method-i-cache","()",""],["cache","Bundler::CLI","Bundler/CLI.html#method-i-cache","()",""],["cache","Bundler::Runtime","Bundler/Runtime.html#method-i-cache","(custom_path = nil)",""],["cache","Bundler::Source::Git","Bundler/Source/Git.html#method-i-cache","(spec, custom_path = nil)",""],["cache","Bundler::Source::Path","Bundler/Source/Path.html#method-i-cache","(spec, custom_path = nil)",""],["cache","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-cache","(spec, custom_path = nil)",""],["cache_path","Bundler::Runtime","Bundler/Runtime.html#method-i-cache_path","(custom_path = nil)",""],["cache_path","Bundler::Source::Git","Bundler/Source/Git.html#method-i-cache_path","()","<p>This is the path which is going to contain a cache of the git repository.\nWhen using the same git repository …\n"],["cached!","Bundler::Source::Path","Bundler/Source/Path.html#method-i-cached-21","()",""],["cached!","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-cached-21","()",""],["cached?","Bundler::Source::Git","Bundler/Source/Git.html#method-i-cached-3F","()",""],["cached_built_in_gem","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-cached_built_in_gem","(spec)",""],["cached_gem","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-cached_gem","(spec)",""],["cached_path","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-cached_path","(spec)",""],["cached_revision","Bundler::Source::Git","Bundler/Source/Git.html#method-i-cached_revision","()",""],["cached_specs","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-cached_specs","()",""],["can_install_parallely?","Bundler::Installer","Bundler/Installer.html#method-i-can_install_parallely-3F","()",""],["chdir","Bundler::SharedHelpers","Bundler/SharedHelpers.html#method-i-chdir","(dir, &blk)",""],["check","Bundler::CLI","Bundler/CLI.html#method-i-check","()",""],["check_executable_overwrite","Bundler::GemInstaller","Bundler/GemInstaller.html#method-i-check_executable_overwrite","(filename)",""],["checkout","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-checkout","()",""],["clean","Bundler::CLI","Bundler/CLI.html#method-i-clean","()",""],["clean","Bundler::Runtime","Bundler/Runtime.html#method-i-clean","(dry_run = false)",""],["clean?","Bundler::GemHelper","Bundler/GemHelper.html#method-i-clean-3F","()",""],["clean_exec","Bundler","Bundler.html#method-i-clean_exec","(*args)",""],["clean_load_path","Bundler::SharedHelpers","Bundler/SharedHelpers.html#method-i-clean_load_path","()",""],["clean_req","Bundler::Resolver","Bundler/Resolver.html#method-i-clean_req","(req)",""],["clean_system","Bundler","Bundler.html#method-i-clean_system","(*args)",""],["clear_gemspec_cache","Bundler","Bundler.html#method-i-clear_gemspec_cache","()",""],["clear_paths","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-clear_paths","()",""],["clear_search_cache","Bundler::Resolver","Bundler/Resolver.html#method-i-clear_search_cache","()",""],["committed?","Bundler::GemHelper","Bundler/GemHelper.html#method-i-committed-3F","()",""],["config","Bundler::CLI","Bundler/CLI.html#method-i-config","(*args)",""],["config_map","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-config_map","()",""],["configuration","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-configuration","()",""],["configure","Bundler","Bundler.html#method-i-configure","()",""],["configure_gem_home","Bundler","Bundler.html#method-i-configure_gem_home","()",""],["configure_gem_home_and_path","Bundler","Bundler.html#method-i-configure_gem_home_and_path","()",""],["confirm","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-confirm","(msg, newline = nil)",""],["confirm","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-confirm","(message, newline = nil)",""],["connection","Bundler::Fetcher","Bundler/Fetcher.html#method-i-connection","()",""],["console","Bundler::CLI","Bundler/CLI.html#method-i-console","(group = nil)",""],["contains?","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-contains-3F","(commit)",""],["converge_dependencies","Bundler::Definition","Bundler/Definition.html#method-i-converge_dependencies","()",""],["converge_locals","Bundler::Definition","Bundler/Definition.html#method-i-converge_locals","()","<p>Get all locals and override their matching sources. Return true if any of\nthe locals changed (for example, …\n"],["converge_locked_specs","Bundler::Definition","Bundler/Definition.html#method-i-converge_locked_specs","()","<p>Remove elements from the locked specs that are expired. This will most\ncommonly happen if the Gemfile …\n"],["converge_paths","Bundler::Definition","Bundler/Definition.html#method-i-converge_paths","()",""],["converge_sources","Bundler::Definition","Bundler/Definition.html#method-i-converge_sources","()",""],["copy_to","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-copy_to","(destination, submodules=false)",""],["create_bundle_path","Bundler::Installer","Bundler/Installer.html#method-i-create_bundle_path","()",""],["current_dependencies","Bundler::Definition","Bundler/Definition.html#method-i-current_dependencies","()",""],["current_dependencies","Bundler::Environment","Bundler/Environment.html#method-i-current_dependencies","()",""],["current_env?","Bundler::Dependency","Bundler/Dependency.html#method-i-current_env-3F","()",""],["current_platform?","Bundler::Dependency","Bundler/Dependency.html#method-i-current_platform-3F","()",""],["current_ruby","Bundler","Bundler.html#method-c-current_ruby","()","<p>Returns current version of Ruby\n<p>@return [CurrentRuby] Current version of Ruby\n"],["debug","Bundler::Resolver","Bundler/Resolver.html#method-i-debug","()",""],["debug","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-debug","(msg, newline = nil)",""],["debug","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-debug","(message, newline = nil)",""],["debug?","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-debug-3F","()",""],["debug?","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-debug-3F","()",""],["default_attempts","Bundler::Retry","Bundler/Retry.html#method-i-default_attempts","()",""],["default_gemfile","Bundler","Bundler.html#method-i-default_gemfile","()",""],["default_gemfile","Bundler::SharedHelpers","Bundler/SharedHelpers.html#method-i-default_gemfile","()",""],["default_lockfile","Bundler","Bundler.html#method-i-default_lockfile","()",""],["default_lockfile","Bundler::SharedHelpers","Bundler/SharedHelpers.html#method-i-default_lockfile","()",""],["define_task","Bundler::Deployment","Bundler/Deployment.html#method-c-define_task","(context, task_method = :task, opts = {})",""],["definition","Bundler","Bundler.html#method-i-definition","(unlock = nil)","<p>Returns an instance of Bundler::Definition for given Gemfile and lockfile\n<p>@param unlock [Hash, Boolean …\n"],["delete","Bundler::Settings","Bundler/Settings.html#method-i-delete","(key)",""],["dependencies","Bundler::Environment","Bundler/Environment.html#method-i-dependencies","()",""],["dependencies_for","Bundler::Runtime","Bundler/Runtime.html#method-i-dependencies_for","(*groups)",""],["dependencies_to_gemfile","Gem::Specification","Gem/Specification.html#method-i-dependencies_to_gemfile","(dependencies, group = nil)",""],["dependency_api_uri","Bundler::Fetcher","Bundler/Fetcher.html#method-i-dependency_api_uri","(gem_names = [])",""],["dependency_tree","Bundler::Resolver","Bundler/Resolver.html#method-i-dependency_tree","(m, requirements)",""],["deq","Bundler::ParallelWorkers::Worker","Bundler/ParallelWorkers/Worker.html#method-i-deq","()","<p>Retrieves results of job function being executed in worker pool\n"],["diff","Bundler::RubyVersion","Bundler/RubyVersion.html#method-i-diff","(other)","<p>Returns a tuple of thsee things:\n\n<pre>[diff, this, other]\nThe priority of attributes are\n1. engine\n2. ruby_version ...</pre>\n"],["download_gem","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-download_gem","(spec, uri, path)",""],["download_gem_from_uri","Bundler::Fetcher","Bundler/Fetcher.html#method-i-download_gem_from_uri","(spec, uri)",""],["each","Bundler::Index","Bundler/Index.html#method-i-each","(&blk)",""],["empty?","Bundler::Index","Bundler/Index.html#method-i-empty-3F","()",""],["encode_with","Gem::Dependency","Gem/Dependency.html#method-i-encode_with","(coder)",""],["engine","Bundler::SystemRubyVersion","Bundler/SystemRubyVersion.html#method-i-engine","()",""],["engine_version","Bundler::SystemRubyVersion","Bundler/SystemRubyVersion.html#method-i-engine_version","()",""],["enq","Bundler::ParallelWorkers::Worker","Bundler/ParallelWorkers/Worker.html#method-i-enq","(obj)","<p>Enqueue a request to be executed in the worker pool\n<p>@param obj [String] mostly it is name of spec that …\n"],["ensure_equivalent_gemfile_and_lockfile","Bundler::Definition","Bundler/Definition.html#method-i-ensure_equivalent_gemfile_and_lockfile","(explicit_flag = false)",""],["env","Bundler::CLI","Bundler/CLI.html#method-i-env","()",""],["env","Bundler::Dsl","Bundler/Dsl.html#method-i-env","(name)",""],["environment","Bundler","Bundler.html#method-i-environment","()",""],["eql?","Bundler::DepProxy","Bundler/DepProxy.html#method-i-eql-3F","(o)",""],["eql?","Bundler::Source::Git","Bundler/Source/Git.html#method-i-eql-3F","(o)",""],["eql?","Bundler::Source::Path","Bundler/Source/Path.html#method-i-eql-3F","(o)",""],["eql?","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-eql-3F","(o)",""],["error","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-error","(msg, newline = nil)",""],["error","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-error","(message, newline = nil)",""],["error_message","Bundler::Resolver","Bundler/Resolver.html#method-i-error_message","()",""],["eval_gemfile","Bundler::Dsl","Bundler/Dsl.html#method-i-eval_gemfile","(gemfile, contents = nil)",""],["eval_gemspec","Bundler","Bundler.html#method-i-eval_gemspec","(path, contents)",""],["eval_yaml_gemspec","Bundler","Bundler.html#method-i-eval_yaml_gemspec","(path, contents)",""],["evaluate","Bundler::Dsl","Bundler/Dsl.html#method-c-evaluate","(gemfile, lockfile, unlock)",""],["exec","Bundler::CLI","Bundler/CLI.html#method-i-exec","(*args)",""],["executables","Bundler::EndpointSpecification","Bundler/EndpointSpecification.html#method-i-executables","()","<p>needed for binstubs\n"],["expand","Bundler::Source::Path","Bundler/Source/Path.html#method-i-expand","(somepath)",""],["expand_dependencies","Bundler::Definition","Bundler/Definition.html#method-i-expand_dependencies","(dependencies, remote = false)",""],["expanded_dependencies","Bundler::Definition","Bundler/Definition.html#method-i-expanded_dependencies","()",""],["extension_dir","Gem::Specification","Gem/Specification.html#method-i-extension_dir","()",""],["extension_dir_name","Bundler::Source::Git","Bundler/Source/Git.html#method-i-extension_dir_name","()",""],["extract_circular_gems","Bundler::SpecSet","Bundler/SpecSet.html#method-i-extract_circular_gems","(error)",""],["fail","Bundler::Retry","Bundler/Retry.html#method-i-fail","(e)",""],["fetch","Bundler::Fetcher","Bundler/Fetcher.html#method-i-fetch","(uri, counter = 0)",""],["fetch_all_remote_specs","Bundler::Fetcher","Bundler/Fetcher.html#method-i-fetch_all_remote_specs","()","<p>fetch from modern index: specs.4.8.gz\n"],["fetch_all_remote_specs","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-fetch_all_remote_specs","()",""],["fetch_dependency_remote_specs","Bundler::Fetcher","Bundler/Fetcher.html#method-i-fetch_dependency_remote_specs","(gem_names)","<p>fetch from Gemcutter Dependency Endpoint API\n"],["fetch_gem","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-fetch_gem","(spec)",""],["fetch_platform","Bundler::EndpointSpecification","Bundler/EndpointSpecification.html#method-i-fetch_platform","()",""],["fetch_platform","Bundler::RemoteSpecification","Bundler/RemoteSpecification.html#method-i-fetch_platform","()","<p>Needed before installs, since the arch matters then and quick specs don’t\nbother to include the arch …\n"],["fetch_prerelease_specs","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-fetch_prerelease_specs","()",""],["fetch_remote_specs","Bundler::Fetcher","Bundler/Fetcher.html#method-i-fetch_remote_specs","(gem_names, full_dependency_list = [], last_spec_list = [])","<p>fetch index\n"],["fetch_spec","Bundler::Fetcher","Bundler/Fetcher.html#method-i-fetch_spec","(spec)","<p>fetch a gem specification\n"],["fetch_specs","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-fetch_specs","(all, pre, &blk)",""],["fetch_specs","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-fetch_specs","()",""],["find_conflict_state","Bundler::Resolver","Bundler/Resolver.html#method-i-find_conflict_state","(conflict, states)",""],["find_gemfile","Bundler::SharedHelpers","Bundler/SharedHelpers.html#method-i-find_gemfile","()",""],["find_name","Bundler::RubygemsIntegration::Legacy","Bundler/RubygemsIntegration/Legacy.html#method-i-find_name","(name)",""],["find_state","Bundler::Resolver","Bundler/Resolver.html#method-i-find_state","(current, states)",""],["fixup_dependency_types!","Bundler::Definition","Bundler/Definition.html#method-i-fixup_dependency_types-21","()",""],["for","Bundler::SpecSet","Bundler/SpecSet.html#method-i-for","(dependencies, skip = [], check = false, match_current_platform = false)",""],["for?","Bundler::Resolver::SpecGroup","Bundler/Resolver/SpecGroup.html#method-i-for-3F","(platform)",""],["from_lock","Bundler::Source::Git","Bundler/Source/Git.html#method-c-from_lock","(options)",""],["from_lock","Bundler::Source::Path","Bundler/Source/Path.html#method-c-from_lock","(options)",""],["from_lock","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-c-from_lock","(options)",""],["full_gem_path","Gem::Specification","Gem/Specification.html#method-i-full_gem_path","()",""],["full_name","Bundler::LazySpecification","Bundler/LazySpecification.html#method-i-full_name","()",""],["full_name","Bundler::RemoteSpecification","Bundler/RemoteSpecification.html#method-i-full_name","()",""],["g","Bundler::Graph::GraphVizClient","Bundler/Graph/GraphVizClient.html#method-i-g","()",""],["gem","Bundler::CLI","Bundler/CLI.html#method-i-gem","(name)",""],["gem","Bundler::Dsl","Bundler/Dsl.html#method-i-gem","(name, *args)",""],["gem_bindir","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-gem_bindir","()",""],["gem_cache","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-gem_cache","()",""],["gem_dir","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-gem_dir","()",""],["gem_dir","Gem::Specification","Gem/Specification.html#method-i-gem_dir","()",""],["gem_from_path","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-gem_from_path","(path, policy = nil)",""],["gem_message","Bundler::Resolver","Bundler/Resolver.html#method-i-gem_message","(requirement, required_by=[])","<p>For a given conflicted requirement, print out what exactly went wrong\n"],["gem_mirrors","Bundler::Settings","Bundler/Settings.html#method-i-gem_mirrors","()",""],["gem_not_found_message","Bundler::CLI::Common","Bundler/CLI/Common.html#method-c-gem_not_found_message","(missing_gem_name, alternatives)",""],["gem_path","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-gem_path","()",""],["gem_platforms","Bundler::Dependency","Bundler/Dependency.html#method-i-gem_platforms","(valid_platforms)",""],["gem_push?","Bundler::GemHelper","Bundler/GemHelper.html#method-i-gem_push-3F","()",""],["gem_version","Bundler::SystemRubyVersion","Bundler/SystemRubyVersion.html#method-i-gem_version","()",""],["gems_size","Bundler::Resolver","Bundler/Resolver.html#method-i-gems_size","(dep)",""],["gemspec","Bundler::Dsl","Bundler/Dsl.html#method-i-gemspec","(opts = nil)",""],["gemspec","Bundler::GemHelper","Bundler/GemHelper.html#method-i-gemspec","(&block)",""],["gemspec_cached_path","Bundler::Fetcher","Bundler/Fetcher.html#method-i-gemspec_cached_path","(spec_file_name)","<p>cached gem specification path, if one exists\n"],["generate_bin","Bundler::Source::Path","Bundler/Source/Path.html#method-i-generate_bin","(spec, disable_extensions = false)",""],["generate_bin","Bundler::Source::Path::Installer","Bundler/Source/Path/Installer.html#method-i-generate_bin","()",""],["generate_bundler_executable_stubs","Bundler::Installer","Bundler/Installer.html#method-i-generate_bundler_executable_stubs","(spec, options = {})",""],["generate_standalone","Bundler::Installer","Bundler/Installer.html#method-i-generate_standalone","(groups)",""],["generate_standalone_bundler_executable_stubs","Bundler::Installer","Bundler/Installer.html#method-i-generate_standalone_bundler_executable_stubs","(spec)",""],["generic","Bundler::GemHelpers","Bundler/GemHelpers.html#method-i-generic","(p)",""],["git","Bundler::Dsl","Bundler/Dsl.html#method-i-git","(uri, options = {}, source_options = {}, &blk)",""],["git","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-git","(command, check_errors=true)",""],["git_null","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-git_null","(command)","<p>TODO: Do not rely on /dev/null. Given that open3 is not cross platform\nuntil Ruby 1.9.3, the best solution …\n"],["git_present?","Bundler","Bundler.html#method-i-git_present-3F","()",""],["git_proxy","Bundler::Source::Git","Bundler/Source/Git.html#method-i-git_proxy","()",""],["git_push","Bundler::GemHelper","Bundler/GemHelper.html#method-i-git_push","()",""],["git_retry","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-git_retry","(command)",""],["git_source","Bundler::Dsl","Bundler/Dsl.html#method-i-git_source","(name, &block)",""],["git_version","Gem::Specification","Gem/Specification.html#method-i-git_version","()",""],["global_config_file","Bundler::Settings","Bundler/Settings.html#method-i-global_config_file","()",""],["group","Bundler::Dsl","Bundler/Dsl.html#method-i-group","(*args, &blk)",""],["groups","Bundler::Definition","Bundler/Definition.html#method-i-groups","()",""],["groups","Gem::Specification","Gem/Specification.html#method-i-groups","()",""],["guard_clean","Bundler::GemHelper","Bundler/GemHelper.html#method-i-guard_clean","()",""],["handle_conflict","Bundler::Resolver","Bundler/Resolver.html#method-i-handle_conflict","(current, states, existing=nil)",""],["has_app_cache?","Bundler::Source::Git","Bundler/Source/Git.html#method-i-has_app_cache-3F","()",""],["has_app_cache?","Bundler::Source::Path","Bundler/Source/Path.html#method-i-has_app_cache-3F","()",""],["has_revision_cached?","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-has_revision_cached-3F","()",""],["hash","Bundler::DepProxy","Bundler/DepProxy.html#method-i-hash","()",""],["hash","Bundler::Source::Path","Bundler/Source/Path.html#method-i-hash","()",""],["hash","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-hash","()",""],["hash","Gem::Platform","Gem/Platform.html#method-i-hash","()",""],["help","Bundler::CLI","Bundler/CLI.html#method-i-help","(cli = nil)",""],["home","Bundler","Bundler.html#method-i-home","()",""],["host","Bundler::RubyVersion","Bundler/RubyVersion.html#method-i-host","()",""],["identifier","Bundler::LazySpecification","Bundler/LazySpecification.html#method-i-identifier","()",""],["ignore_config?","Bundler::Settings","Bundler/Settings.html#method-i-ignore_config-3F","()",""],["in_bundle?","Bundler::SharedHelpers","Bundler/SharedHelpers.html#method-i-in_bundle-3F","()",""],["in_locked_deps?","Bundler::Definition","Bundler/Definition.html#method-i-in_locked_deps-3F","(dep, d)",""],["in_path","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-in_path","(&blk)",""],["index","Bundler::Definition","Bundler/Definition.html#method-i-index","()",""],["indicate_progress","Bundler::Resolver","Bundler/Resolver.html#method-i-indicate_progress","()","<p>Indicates progress by writing a ‘.’ every iteration_rate time which is\napproximately every second. iteration_rate …\n"],["inflate","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-inflate","(obj)",""],["info","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-info","(msg, newline = nil)",""],["info","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-info","(message, newline = nil)",""],["init","Bundler::CLI","Bundler/CLI.html#method-i-init","()",""],["initialize_copy","Bundler::Index","Bundler/Index.html#method-i-initialize_copy","(o)",""],["initialize_copy","Bundler::Resolver::SpecGroup","Bundler/Resolver/SpecGroup.html#method-i-initialize_copy","(o)",""],["inject","Bundler::CLI","Bundler/CLI.html#method-i-inject","(name, version, *gems)",""],["inject","Bundler::Injector","Bundler/Injector.html#method-i-inject","(gemfile_path, lockfile_path)",""],["inject","Bundler::Injector","Bundler/Injector.html#method-c-inject","(new_deps)",""],["inspect","Bundler::Environment","Bundler/Environment.html#method-i-inspect","()",""],["inspect","Bundler::Fetcher","Bundler/Fetcher.html#method-i-inspect","()",""],["inspect","Bundler::Index","Bundler/Index.html#method-i-inspect","()",""],["install","Bundler::CLI","Bundler/CLI.html#method-i-install","()",""],["install","Bundler::CLI::Package","Bundler/CLI/Package.html#method-i-install","()",""],["install","Bundler::GemHelper","Bundler/GemHelper.html#method-i-install","()",""],["install","Bundler::Installer","Bundler/Installer.html#method-c-install","(root, definition, options = {})","<p>Begins the installation process for Bundler. For more information see the\n#run method on this class. …\n"],["install","Bundler::Source::Git","Bundler/Source/Git.html#method-i-install","(spec)",""],["install","Bundler::Source::Path","Bundler/Source/Path.html#method-i-install","(spec)",""],["install","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-install","(spec)",""],["install_gem","Bundler::GemHelper","Bundler/GemHelper.html#method-i-install_gem","(built_gem_path=nil)",""],["install_gem_from_spec","Bundler::Installer","Bundler/Installer.html#method-i-install_gem_from_spec","(spec, standalone = false, worker = 0)",""],["install_in_parallel","Bundler::Installer","Bundler/Installer.html#method-i-install_in_parallel","(size, standalone)",""],["install_path","Bundler","Bundler.html#method-i-install_path","()",""],["install_path","Bundler::Source::Git","Bundler/Source/Git.html#method-i-install_path","()","<p>This is the path which is going to contain a specific checkout of the git\nrepository. When using local …\n"],["install_sequentially","Bundler::Installer","Bundler/Installer.html#method-i-install_sequentially","(standalone)",""],["install_tasks","Bundler::GemHelper","Bundler/GemHelper.html#method-i-install_tasks","(opts = {})",""],["installed_specs","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-installed_specs","()",""],["is_bool","Bundler::Settings","Bundler/Settings.html#method-i-is_bool","(key)",""],["jruby?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-jruby-3F","()",""],["jruby_18?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-jruby_18-3F","()",""],["jruby_19?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-jruby_19-3F","()",""],["keep_trying?","Bundler::Retry","Bundler/Retry.html#method-i-keep_trying-3F","()",""],["key_for","Bundler::Settings","Bundler/Settings.html#method-i-key_for","(key)",""],["last_attempt?","Bundler::Retry","Bundler/Retry.html#method-i-last_attempt-3F","()",""],["level","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-level","(name = nil)",""],["level","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-level","(name = nil)",""],["level=","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-level-3D","(level)",""],["level=","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-level-3D","(name)",""],["levenshtein_distance","Bundler::SimilarityDetector","Bundler/SimilarityDetector.html#method-i-levenshtein_distance","(this, that, ins=2, del=2, sub=1)","<p>www.informit.com/articles/article.aspx?p=683059&seqNum=36\n"],["licenses","Bundler::CLI","Bundler/CLI.html#method-i-licenses","()",""],["load","Bundler","Bundler.html#method-i-load","()",""],["load_config","Bundler::Settings","Bundler/Settings.html#method-i-load_config","(config_file)",""],["load_gemspec","Bundler","Bundler.html#method-i-load_gemspec","(file)",""],["load_gemspec_uncached","Bundler","Bundler.html#method-i-load_gemspec_uncached","(file)",""],["load_marshal","Bundler","Bundler.html#method-i-load_marshal","(data)",""],["load_paths","Gem::Specification","Gem/Specification.html#method-i-load_paths","()",""],["load_spec_files","Bundler::Source::Git","Bundler/Source/Git.html#method-i-load_spec_files","()",""],["load_spec_files","Bundler::Source::Path","Bundler/Source/Path.html#method-i-load_spec_files","()",""],["loaded_from","Gem::Specification","Gem/Specification.html#method-i-loaded_from","()",""],["loaded_specs","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-loaded_specs","(name)",""],["local?","Bundler::Source::Git","Bundler/Source/Git.html#method-i-local-3F","()",""],["local_config_file","Bundler::Settings","Bundler/Settings.html#method-i-local_config_file","()",""],["local_override!","Bundler::Source::Git","Bundler/Source/Git.html#method-i-local_override-21","(path)",""],["local_overrides","Bundler::Settings","Bundler/Settings.html#method-i-local_overrides","()",""],["local_search","Bundler::Index","Bundler/Index.html#method-i-local_search","(query, base = nil)",""],["local_specification_path","Bundler::EndpointSpecification","Bundler/EndpointSpecification.html#method-i-local_specification_path","()",""],["local_specs","Bundler::Source::Path","Bundler/Source/Path.html#method-i-local_specs","(*)",""],["locations","Bundler::Settings","Bundler/Settings.html#method-i-locations","(key)",""],["lock","Bundler::Definition","Bundler/Definition.html#method-i-lock","(file)",""],["lock","Bundler::Environment","Bundler/Environment.html#method-i-lock","()",""],["locked_gems","Bundler","Bundler.html#method-i-locked_gems","()",""],["lookup","Bundler::SpecSet","Bundler/SpecSet.html#method-i-lookup","()",""],["maglev?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-maglev-3F","()",""],["mark_loaded","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-mark_loaded","(spec)",""],["marshal_spec_dir","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-marshal_spec_dir","()",""],["match_platform","Bundler::MatchPlatform","Bundler/MatchPlatform.html#method-i-match_platform","(p)",""],["matches_spec?","Gem::Dependency","Gem/Dependency.html#method-i-matches_spec-3F","(spec)","<p>Backport of performance enhancement added to Rubygems 1.4\n"],["matching_specs","Bundler::Graph","Bundler/Graph.html#method-i-matching_specs","(platform_only = false)",""],["materialize","Bundler::SpecSet","Bundler/SpecSet.html#method-i-materialize","(deps, missing_specs = nil)",""],["merge","Bundler::SpecSet","Bundler/SpecSet.html#method-i-merge","(set)",""],["method_missing","Bundler::DepProxy","Bundler/DepProxy.html#method-i-method_missing","(*args)",""],["method_missing","Bundler::Dsl","Bundler/Dsl.html#method-i-method_missing","(name, *args)",""],["method_missing","Bundler::LazySpecification","Bundler/LazySpecification.html#method-i-method_missing","(method, *args, &blk)",""],["method_missing","Bundler::RemoteSpecification","Bundler/RemoteSpecification.html#method-i-method_missing","(method, *args, &blk)",""],["mingw?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mingw-3F","()",""],["mingw_18?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mingw_18-3F","()",""],["mingw_19?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mingw_19-3F","()",""],["mingw_20?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mingw_20-3F","()",""],["mingw_21?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mingw_21-3F","()",""],["mirror_for","Bundler::Source","Bundler/Source.html#method-c-mirror_for","(uri)",""],["missing_specs","Bundler::Definition","Bundler/Definition.html#method-i-missing_specs","()",""],["mkdir_p","Bundler","Bundler.html#method-i-mkdir_p","(path)",""],["mri?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mri-3F","()",""],["mri_18?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mri_18-3F","()",""],["mri_19?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mri_19-3F","()",""],["mri_20?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mri_20-3F","()",""],["mri_21?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mri_21-3F","()",""],["mswin?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-mswin-3F","()",""],["name","Bundler::DepProxy","Bundler/DepProxy.html#method-i-name","()",""],["name","Bundler::GemHelper","Bundler/GemHelper.html#method-i-name","()",""],["name","Bundler::Resolver::SpecGroup","Bundler/Resolver/SpecGroup.html#method-i-name","()",""],["name","Bundler::Resolver::State","Bundler/Resolver/State.html#method-i-name","()",""],["name","Bundler::Source::Git","Bundler/Source/Git.html#method-i-name","()",""],["name","Bundler::Source::Path","Bundler/Source/Path.html#method-i-name","()",""],["name","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-name","()",""],["new","Bundler::CLI","Bundler/CLI.html#method-c-new","(*)",""],["new","Bundler::CLI::Binstubs","Bundler/CLI/Binstubs.html#method-c-new","(options, gems)",""],["new","Bundler::CLI::Cache","Bundler/CLI/Cache.html#method-c-new","(options)",""],["new","Bundler::CLI::Check","Bundler/CLI/Check.html#method-c-new","(options)",""],["new","Bundler::CLI::Clean","Bundler/CLI/Clean.html#method-c-new","(options)",""],["new","Bundler::CLI::Config","Bundler/CLI/Config.html#method-c-new","(options, args, thor)",""],["new","Bundler::CLI::Console","Bundler/CLI/Console.html#method-c-new","(options, group, consoles)",""],["new","Bundler::CLI::Exec","Bundler/CLI/Exec.html#method-c-new","(options, args)",""],["new","Bundler::CLI::Gem","Bundler/CLI/Gem.html#method-c-new","(options, gem_name, thor)",""],["new","Bundler::CLI::Init","Bundler/CLI/Init.html#method-c-new","(options)",""],["new","Bundler::CLI::Inject","Bundler/CLI/Inject.html#method-c-new","(options, name, version, gems)",""],["new","Bundler::CLI::Install","Bundler/CLI/Install.html#method-c-new","(options)",""],["new","Bundler::CLI::Open","Bundler/CLI/Open.html#method-c-new","(options, name)",""],["new","Bundler::CLI::Outdated","Bundler/CLI/Outdated.html#method-c-new","(options, gems)",""],["new","Bundler::CLI::Package","Bundler/CLI/Package.html#method-c-new","(options)",""],["new","Bundler::CLI::Platform","Bundler/CLI/Platform.html#method-c-new","(options)",""],["new","Bundler::CLI::Show","Bundler/CLI/Show.html#method-c-new","(options, gem_name)",""],["new","Bundler::CLI::Update","Bundler/CLI/Update.html#method-c-new","(options, gems)",""],["new","Bundler::CLI::Viz","Bundler/CLI/Viz.html#method-c-new","(options)",""],["new","Bundler::Definition","Bundler/Definition.html#method-c-new","(lockfile, dependencies, sources, unlock, ruby_version = nil)","<p>How does the new system work?\n<p>Load information from Gemfile and Lockfile\n<p>Invalidate stale locked specs …\n"],["new","Bundler::DepProxy","Bundler/DepProxy.html#method-c-new","(dep, platform)",""],["new","Bundler::Dependency","Bundler/Dependency.html#method-c-new","(name, version, options = {}, &blk)",""],["new","Bundler::Dsl","Bundler/Dsl.html#method-c-new","()",""],["new","Bundler::EndpointSpecification","Bundler/EndpointSpecification.html#method-c-new","(name, version, platform, dependencies)",""],["new","Bundler::Environment","Bundler/Environment.html#method-c-new","(root, definition)",""],["new","Bundler::Fetcher","Bundler/Fetcher.html#method-c-new","(remote_uri)",""],["new","Bundler::Fetcher::AuthenticationRequiredError","Bundler/Fetcher/AuthenticationRequiredError.html#method-c-new","(remote_uri)",""],["new","Bundler::Fetcher::BadAuthenticationError","Bundler/Fetcher/BadAuthenticationError.html#method-c-new","(remote_uri)",""],["new","Bundler::Fetcher::CertificateFailureError","Bundler/Fetcher/CertificateFailureError.html#method-c-new","(remote_uri)",""],["new","Bundler::Fetcher::SSLError","Bundler/Fetcher/SSLError.html#method-c-new","(msg = nil)",""],["new","Bundler::GemHelper","Bundler/GemHelper.html#method-c-new","(base = nil, name = nil)",""],["new","Bundler::Graph","Bundler/Graph.html#method-c-new","(env, output_file, show_version = false, show_requirements = false, output_format = \"png\")",""],["new","Bundler::Graph::GraphVizClient","Bundler/Graph/GraphVizClient.html#method-c-new","(graph_instance)",""],["new","Bundler::Index","Bundler/Index.html#method-c-new","()",""],["new","Bundler::Injector","Bundler/Injector.html#method-c-new","(new_deps)",""],["new","Bundler::LazySpecification","Bundler/LazySpecification.html#method-c-new","(name, version, platform, source = nil)",""],["new","Bundler::LockfileParser","Bundler/LockfileParser.html#method-c-new","(lockfile)",""],["new","Bundler::ParallelWorkers::UnixWorker","Bundler/ParallelWorkers/UnixWorker.html#method-c-new","(size, job)",""],["new","Bundler::ParallelWorkers::Worker","Bundler/ParallelWorkers/Worker.html#method-c-new","(size, func)","<p>Creates a worker pool of specified size\n<p>@param size [Integer] Size of pool @param func [Proc] job to run …\n"],["new","Bundler::ParallelWorkers::Worker::WrappedException","Bundler/ParallelWorkers/Worker/WrappedException.html#method-c-new","(exn)",""],["new","Bundler::RemoteSpecification","Bundler/RemoteSpecification.html#method-c-new","(name, version, platform, spec_fetcher)",""],["new","Bundler::Resolver","Bundler/Resolver.html#method-c-new","(index, source_requirements, base)",""],["new","Bundler::Resolver::SpecGroup","Bundler/Resolver/SpecGroup.html#method-c-new","(a)",""],["new","Bundler::Retry","Bundler/Retry.html#method-c-new","(name, exceptions = nil, attempts = nil)",""],["new","Bundler::RubyVersion","Bundler/RubyVersion.html#method-c-new","(version, patchlevel, engine, engine_version)",""],["new","Bundler::RubygemsIntegration::Legacy","Bundler/RubygemsIntegration/Legacy.html#method-c-new","()",""],["new","Bundler::Settings","Bundler/Settings.html#method-c-new","(root = nil)",""],["new","Bundler::SimilarityDetector","Bundler/SimilarityDetector.html#method-c-new","(corpus)","<p>initialize with an array of words to be matched against\n"],["new","Bundler::Source::Git","Bundler/Source/Git.html#method-c-new","(options)",""],["new","Bundler::Source::Git::GitCommandError","Bundler/Source/Git/GitCommandError.html#method-c-new","(command, path = nil)",""],["new","Bundler::Source::Git::GitNotAllowedError","Bundler/Source/Git/GitNotAllowedError.html#method-c-new","(command)",""],["new","Bundler::Source::Git::GitNotInstalledError","Bundler/Source/Git/GitNotInstalledError.html#method-c-new","()",""],["new","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-c-new","(path, uri, ref, revision = nil, git = nil)",""],["new","Bundler::Source::Path","Bundler/Source/Path.html#method-c-new","(options)",""],["new","Bundler::Source::Path::Installer","Bundler/Source/Path/Installer.html#method-c-new","(spec, options = {})",""],["new","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-c-new","(options = {})",""],["new","Bundler::SpecSet","Bundler/SpecSet.html#method-c-new","(specs)",""],["new","Bundler::SystemRubyVersion","Bundler/SystemRubyVersion.html#method-c-new","(*)",""],["new","Bundler::UI::RGProxy","Bundler/UI/RGProxy.html#method-c-new","(ui)",""],["new","Bundler::UI::Shell","Bundler/UI/Shell.html#method-c-new","(options = {})",""],["new","Bundler::VersionConflict","Bundler/VersionConflict.html#method-c-new","(conflicts, msg = nil)",""],["new_gem_lines","Bundler::Injector","Bundler/Injector.html#method-i-new_gem_lines","()",""],["new_platform?","Bundler::Definition","Bundler/Definition.html#method-i-new_platform-3F","()",""],["new_specs","Bundler::Definition","Bundler/Definition.html#method-i-new_specs","()",""],["nondevelopment_dependencies","Gem::Specification","Gem/Specification.html#method-i-nondevelopment_dependencies","()",""],["none?","Gem::Requirement","Gem/Requirement.html#method-i-none-3F","()","<p>Backport of performance enhancement added to Rubygems 1.4\n"],["normalize_hash","Bundler::Dsl","Bundler/Dsl.html#method-i-normalize_hash","(opts)",""],["normalize_options","Bundler::Dsl","Bundler/Dsl.html#method-i-normalize_options","(name, version, opts)",""],["normalize_uri","Bundler::Settings","Bundler/Settings.html#method-i-normalize_uri","(uri)","<p>TODO: duplicates Rubygems#normalize_uri TODO: is this the correct place to\nvalidate mirror URIs?\n"],["normalize_uri","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-normalize_uri","(uri)",""],["nothing_changed?","Bundler::Definition","Bundler/Definition.html#method-i-nothing_changed-3F","()",""],["on_18?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-on_18-3F","()",""],["on_19?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-on_19-3F","()",""],["on_20?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-on_20-3F","()",""],["on_21?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-on_21-3F","()",""],["open","Bundler::CLI","Bundler/CLI.html#method-i-open","(name)",""],["options","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-options","()",""],["other_possible?","Bundler::Resolver","Bundler/Resolver.html#method-i-other_possible-3F","(conflict, states)",""],["outdated","Bundler::CLI","Bundler/CLI.html#method-i-outdated","(*gems)",""],["package","Bundler::CLI","Bundler/CLI.html#method-i-package","()",""],["parse_dependency","Bundler::LockfileParser","Bundler/LockfileParser.html#method-i-parse_dependency","(line)",""],["parse_platform","Bundler::LockfileParser","Bundler/LockfileParser.html#method-i-parse_platform","(line)",""],["parse_source","Bundler::LockfileParser","Bundler/LockfileParser.html#method-i-parse_source","(line)",""],["parse_spec","Bundler::LockfileParser","Bundler/LockfileParser.html#method-i-parse_spec","(line)",""],["patchlevel","Bundler::SystemRubyVersion","Bundler/SystemRubyVersion.html#method-i-patchlevel","()",""],["path","Bundler::Dsl","Bundler/Dsl.html#method-i-path","(path, options = {}, source_options = {}, &blk)",""],["path","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-path","(obj)",""],["path","Bundler::Settings","Bundler/Settings.html#method-i-path","()","<p>@local_config should be prioritized over ENV\n"],["path","Bundler::Source::Git","Bundler/Source/Git.html#method-i-path","()",""],["perform_git_push","Bundler::GemHelper","Bundler/GemHelper.html#method-i-perform_git_push","(options = '')",""],["platform","Bundler::CLI","Bundler/CLI.html#method-i-platform","()",""],["platform","Bundler::Dsl","Bundler/Dsl.html#method-i-platform","(*platforms)",""],["platforms","Bundler::Dsl","Bundler/Dsl.html#method-i-platforms","(*platforms)",""],["platforms","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-platforms","()",""],["post_install_message","Bundler::EndpointSpecification","Bundler/EndpointSpecification.html#method-i-post_install_message","()","<p>needed for post_install_messages during install\n"],["prepare_threads","Bundler::ParallelWorkers::UnixWorker","Bundler/ParallelWorkers/UnixWorker.html#method-i-prepare_threads","(size)","<p>Start the threads whose job is basically to wait for incoming messages on\nrequest queue and write that …\n"],["prepare_threads","Bundler::ParallelWorkers::Worker","Bundler/ParallelWorkers/Worker.html#method-i-prepare_threads","(size)","<p>To be overridden by child classes\n"],["prepare_workers","Bundler::ParallelWorkers::ThreadWorker","Bundler/ParallelWorkers/ThreadWorker.html#method-i-prepare_workers","(size, func)","<p>On platforms where fork is not available use Threads for parallely\ndownloading gems\n<p>@param size [Integer] …\n"],["prepare_workers","Bundler::ParallelWorkers::UnixWorker","Bundler/ParallelWorkers/UnixWorker.html#method-i-prepare_workers","(size, func)","<p>Start forked workers for downloading gems. This version of worker is only\nused on platforms where fork …\n"],["preserve_gem_path","Bundler","Bundler.html#method-c-preserve_gem_path","()",""],["preserve_paths","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-preserve_paths","()",""],["pretty_dep","Bundler::Definition","Bundler/Definition.html#method-i-pretty_dep","(dep, source = false)",""],["pretty_values_for","Bundler::Settings","Bundler/Settings.html#method-i-pretty_values_for","(exposed_key)",""],["provides?","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-provides-3F","(req_str)",""],["provides?","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-c-provides-3F","(req_str)",""],["prune_cache","Bundler::Runtime","Bundler/Runtime.html#method-i-prune_cache","(custom_path)",""],["prune_gem_cache","Bundler::Runtime","Bundler/Runtime.html#method-i-prune_gem_cache","(resolve, custom_path)",""],["prune_git_and_path_cache","Bundler::Runtime","Bundler/Runtime.html#method-i-prune_git_and_path_cache","(resolve, custom_path)",""],["pwd","Bundler::SharedHelpers","Bundler/SharedHelpers.html#method-i-pwd","()",""],["quiet?","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-quiet-3F","()",""],["quiet?","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-quiet-3F","()",""],["rbx?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-rbx-3F","()",""],["read_binary","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-read_binary","(path)",""],["read_file","Bundler","Bundler.html#method-i-read_file","(file)",""],["read_file","Bundler::Env","Bundler/Env.html#method-i-read_file","(filename)",""],["ready_to_install?","Bundler::Installer","Bundler/Installer.html#method-i-ready_to_install-3F","(spec, remains)","<p>We only want to install a gem spec if all its dependencies are met. If the\ndependency is no longer in …\n"],["redefine_method","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-redefine_method","(klass, method, &block)",""],["redirected_uri","Bundler::Fetcher","Bundler/Fetcher.html#method-i-redirected_uri","()",""],["relative_path","Bundler::Source::Path","Bundler/Source/Path.html#method-i-relative_path","()",""],["release_gem","Bundler::GemHelper","Bundler/GemHelper.html#method-i-release_gem","(built_gem_path=nil)",""],["remote!","Bundler::Source::Path","Bundler/Source/Path.html#method-i-remote-21","()",""],["remote!","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-remote-21","()",""],["remote_specs","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-remote_specs","()",""],["removed_specs","Bundler::Definition","Bundler/Definition.html#method-i-removed_specs","()",""],["replace_bin_path","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-replace_bin_path","(specs)","<p>Used to make bin stubs that are not created by bundler work under bundler.\nThe new Gem.bin_path only …\n"],["replace_entrypoints","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-replace_entrypoints","(specs)","<p>Replace or hook into Rubygems to provide a bundlerized view of the world.\n"],["replace_gem","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-replace_gem","(specs)",""],["replace_refresh","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-replace_refresh","()","<p>Because Bundler has a static view of what specs are available, we don’t\n#refresh, so stub it out.\n"],["replace_remotes","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-replace_remotes","(source)",""],["report","Bundler::Env","Bundler/Env.html#method-i-report","()",""],["repository_subdirectories","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-repository_subdirectories","()",""],["request","Bundler::Fetcher","Bundler/Fetcher.html#method-i-request","(uri)",""],["requested_dependencies","Bundler::Definition","Bundler/Definition.html#method-i-requested_dependencies","()",""],["requested_specs","Bundler::Definition","Bundler/Definition.html#method-i-requested_specs","()",""],["requested_specs","Bundler::Environment","Bundler/Environment.html#method-i-requested_specs","()",""],["require","Bundler","Bundler.html#method-i-require","(*groups)",""],["require","Bundler::Runtime","Bundler/Runtime.html#method-i-require","(*groups)",""],["require_paths","Bundler::EndpointSpecification","Bundler/EndpointSpecification.html#method-i-require_paths","()","<p>needed for standalone, load required_paths from local gemspec after the gem\nin installed\n"],["required_by","Gem::Dependency","Gem/Dependency.html#method-i-required_by","()",""],["required_by","Gem::Specification","Gem/Specification.html#method-i-required_by","()",""],["requirement","Bundler::DepProxy","Bundler/DepProxy.html#method-i-requirement","()",""],["requirement","Gem::Dependency","Gem/Dependency.html#method-i-requirement","()",""],["requires_checkout?","Bundler::Source::Git","Bundler/Source/Git.html#method-i-requires_checkout-3F","()",""],["requires_sudo?","Bundler","Bundler.html#method-i-requires_sudo-3F","()",""],["resolve","Bundler::Definition","Bundler/Definition.html#method-i-resolve","()","<p>Resolve all the dependencies specified in Gemfile. It ensures that\ndependencies that have been already …\n"],["resolve","Bundler::Resolver","Bundler/Resolver.html#method-i-resolve","(reqs, activated)",""],["resolve","Bundler::Resolver","Bundler/Resolver.html#method-c-resolve","(requirements, index, source_requirements = {}, base = [])","<p>Figures out the best possible configuration of gems that satisfies the list\nof passed dependencies and …\n"],["resolve_conflict","Bundler::Resolver","Bundler/Resolver.html#method-i-resolve_conflict","(current, states)",""],["resolve_for_conflict","Bundler::Resolver","Bundler/Resolver.html#method-i-resolve_for_conflict","(state)",""],["resolve_remotely!","Bundler::Definition","Bundler/Definition.html#method-i-resolve_remotely-21","()",""],["resolve_with_cache!","Bundler::Definition","Bundler/Definition.html#method-i-resolve_with_cache-21","()",""],["respond_to?","Bundler::LazySpecification","Bundler/LazySpecification.html#method-i-respond_to-3F","(*args)",""],["retry_with_auth","Bundler::Fetcher","Bundler/Fetcher.html#method-i-retry_with_auth","()","<p>Attempt to retry with HTTP authentication, if it’s appropriate to do so.\nYields to a block; the caller …\n"],["reverse_rubygems_kernel_mixin","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-reverse_rubygems_kernel_mixin","()",""],["revision","Bundler::Source::Git","Bundler/Source/Git.html#method-i-revision","()",""],["revision","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-revision","()",""],["rg_full_gem_path","Gem::Specification","Gem/Specification.html#method-i-rg_full_gem_path","()",""],["rg_loaded_from","Gem::Specification","Gem/Specification.html#method-i-rg_loaded_from","()",""],["root","Bundler","Bundler.html#method-i-root","()",""],["ruby","Bundler::RubyDsl","Bundler/RubyDsl.html#method-i-ruby","(ruby_version, options = {})",""],["ruby?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-ruby-3F","()",""],["ruby_18?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-ruby_18-3F","()",""],["ruby_19?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-ruby_19-3F","()",""],["ruby_20?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-ruby_20-3F","()",""],["ruby_21?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-ruby_21-3F","()",""],["ruby_engine","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-ruby_engine","()",""],["ruby_scope","Bundler","Bundler.html#method-i-ruby_scope","()",""],["ruby_version","Bundler","Bundler.html#method-i-ruby_version","()",""],["rubygem_push","Bundler::GemHelper","Bundler/GemHelper.html#method-i-rubygem_push","(path)",""],["rubygems?","Bundler::Fetcher","Bundler/Fetcher.html#method-i-rubygems-3F","()",""],["rubygems_index","Bundler::Definition","Bundler/Definition.html#method-i-rubygems_index","()","<p>used when frozen is enabled so we can find the bundler spec, even if (say)\na git gem is not checked out. …\n"],["rubygems_remotes","Bundler::Definition","Bundler/Definition.html#method-i-rubygems_remotes","()",""],["rubygems_source","Bundler::Dsl","Bundler/Dsl.html#method-i-rubygems_source","()",""],["run","Bundler::CLI::Binstubs","Bundler/CLI/Binstubs.html#method-i-run","()",""],["run","Bundler::CLI::Cache","Bundler/CLI/Cache.html#method-i-run","()",""],["run","Bundler::CLI::Check","Bundler/CLI/Check.html#method-i-run","()",""],["run","Bundler::CLI::Clean","Bundler/CLI/Clean.html#method-i-run","()",""],["run","Bundler::CLI::Config","Bundler/CLI/Config.html#method-i-run","()",""],["run","Bundler::CLI::Console","Bundler/CLI/Console.html#method-i-run","()",""],["run","Bundler::CLI::Exec","Bundler/CLI/Exec.html#method-i-run","()",""],["run","Bundler::CLI::Gem","Bundler/CLI/Gem.html#method-i-run","()",""],["run","Bundler::CLI::Init","Bundler/CLI/Init.html#method-i-run","()",""],["run","Bundler::CLI::Inject","Bundler/CLI/Inject.html#method-i-run","()",""],["run","Bundler::CLI::Install","Bundler/CLI/Install.html#method-i-run","()",""],["run","Bundler::CLI::Open","Bundler/CLI/Open.html#method-i-run","()",""],["run","Bundler::CLI::Outdated","Bundler/CLI/Outdated.html#method-i-run","()",""],["run","Bundler::CLI::Package","Bundler/CLI/Package.html#method-i-run","()",""],["run","Bundler::CLI::Platform","Bundler/CLI/Platform.html#method-i-run","()",""],["run","Bundler::CLI::Show","Bundler/CLI/Show.html#method-i-run","()",""],["run","Bundler::CLI::Update","Bundler/CLI/Update.html#method-i-run","()",""],["run","Bundler::CLI::Viz","Bundler/CLI/Viz.html#method-i-run","()",""],["run","Bundler::Graph::GraphVizClient","Bundler/Graph/GraphVizClient.html#method-i-run","()",""],["run","Bundler::Installer","Bundler/Installer.html#method-i-run","(options)","<p>Runs the install procedures for a specific Gemfile.\n<p>Firstly, this method will check to see if Bundler.bundle_path …\n"],["run","Bundler::Retry","Bundler/Retry.html#method-i-run","(&block)",""],["run_hooks","Bundler::Source::Path","Bundler/Source/Path.html#method-i-run_hooks","(type, installer)",""],["same_version?","Bundler::Index","Bundler/Index.html#method-i-same_version-3F","(a, b)",""],["satisfies?","Bundler::LazySpecification","Bundler/LazySpecification.html#method-i-satisfies-3F","(dependency)",""],["satisfies_locked_spec?","Bundler::Definition","Bundler/Definition.html#method-i-satisfies_locked_spec-3F","(dep)",""],["say","Bundler::UI::RGProxy","Bundler/UI/RGProxy.html#method-i-say","(message)",""],["search","Bundler::Index","Bundler/Index.html#method-i-search","(query, base = nil)","<p>Search this index’s specs, and any source indexes that this index knows\nabout, returning all of the results. …\n"],["search","Bundler::Resolver","Bundler/Resolver.html#method-i-search","(dep)",""],["search_by_dependency","Bundler::Index","Bundler/Index.html#method-i-search_by_dependency","(dependency, base = nil)",""],["search_by_spec","Bundler::Index","Bundler/Index.html#method-i-search_by_spec","(spec)",""],["security_policies","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-security_policies","()",""],["select_spec","Bundler::CLI::Common","Bundler/CLI/Common.html#method-c-select_spec","(name, regex_match = nil)",""],["serialize_gemspecs_in","Bundler::Source::Git","Bundler/Source/Git.html#method-i-serialize_gemspecs_in","(destination)",""],["set_global","Bundler::Settings","Bundler/Settings.html#method-i-set_global","(key, value)",""],["set_key","Bundler::Settings","Bundler/Settings.html#method-i-set_key","(key, value, hash, file)",""],["set_local","Bundler::Settings","Bundler/Settings.html#method-i-set_local","(key, value)",""],["set_local!","Bundler::Source::Git","Bundler/Source/Git.html#method-i-set_local-21","(path)",""],["settings","Bundler","Bundler.html#method-i-settings","()",""],["setup","Bundler","Bundler.html#method-i-setup","(*groups)",""],["setup","Bundler::Runtime","Bundler/Runtime.html#method-i-setup","(*groups)",""],["setup_cache_all","Bundler::CLI::Cache","Bundler/CLI/Cache.html#method-i-setup_cache_all","()",""],["setup_cache_all","Bundler::CLI::Package","Bundler/CLI/Package.html#method-i-setup_cache_all","()",""],["setup_environment","Bundler::Runtime","Bundler/Runtime.html#method-i-setup_environment","()",""],["setup_manpath","Bundler::Runtime","Bundler/Runtime.html#method-i-setup_manpath","()",""],["sh","Bundler::GemHelper","Bundler/GemHelper.html#method-i-sh","(cmd, &block)",""],["sh_with_code","Bundler::GemHelper","Bundler/GemHelper.html#method-i-sh_with_code","(cmd, &block)",""],["shortref_for_display","Bundler::Source::Git","Bundler/Source/Git.html#method-i-shortref_for_display","(ref)",""],["shortref_for_path","Bundler::Source::Git","Bundler/Source/Git.html#method-i-shortref_for_path","(ref)",""],["should_include?","Bundler::Dependency","Bundler/Dependency.html#method-i-should_include-3F","()",""],["show","Bundler::CLI","Bundler/CLI.html#method-i-show","(gem_name = nil)",""],["silence","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-silence","()",""],["silence","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-silence","()",""],["similar_word_list","Bundler::SimilarityDetector","Bundler/SimilarityDetector.html#method-i-similar_word_list","(word, limit=3)","<p>return the result of ‘similar_words’, concatenated into a list (eg “a, b,\nor c”)\n"],["similar_words","Bundler::SimilarityDetector","Bundler/SimilarityDetector.html#method-i-similar_words","(word, limit=3)","<p>return an array of words similar to ‘word’ from the corpus\n"],["size","Bundler::Index","Bundler/Index.html#method-i-size","()",""],["skip_during","Bundler::Deprecate","Bundler/Deprecate.html#method-c-skip_during","()",""],["sort!","Bundler::SpecSet","Bundler/SpecSet.html#method-i-sort-21","()",""],["sorted","Bundler::SpecSet","Bundler/SpecSet.html#method-i-sorted","()",""],["sorted_sources","Bundler::Definition","Bundler/Definition.html#method-i-sorted_sources","()",""],["source","Bundler::Dsl","Bundler/Dsl.html#method-i-source","(source, options = {})",""],["source","Bundler::Resolver::SpecGroup","Bundler/Resolver/SpecGroup.html#method-i-source","()",""],["source_root","Bundler::CLI","Bundler/CLI.html#method-c-source_root","()",""],["source_types","Bundler::Index","Bundler/Index.html#method-i-source_types","()",""],["sources","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-sources","()",""],["sources=","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-sources-3D","(val)",""],["spec_cache_dirs","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-spec_cache_dirs","()",""],["spec_from_gem","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-spec_from_gem","(path, policy = nil)",""],["spec_satisfies_dependency?","Bundler::Index","Bundler/Index.html#method-i-spec_satisfies_dependency-3F","(spec, dep)",""],["specific?","Bundler::Dependency","Bundler/Dependency.html#method-i-specific-3F","()",""],["specs","Bundler::Definition","Bundler/Definition.html#method-i-specs","()","<p>For given dependency list returns a SpecSet with Gemspec of all the\nrequired dependencies.\n\n<pre>1. The method ...</pre>\n"],["specs","Bundler::Environment","Bundler/Environment.html#method-i-specs","()",""],["specs","Bundler::Fetcher","Bundler/Fetcher.html#method-i-specs","(gem_names, source)","<p>return the specs in the bundler format as an index\n"],["specs","Bundler::Source::Git","Bundler/Source/Git.html#method-i-specs","(*)","<p>TODO: actually cache git specs\n"],["specs","Bundler::Source::Path","Bundler/Source/Path.html#method-i-specs","()",""],["specs","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-specs","()",""],["specs_by_name","Bundler::Index","Bundler/Index.html#method-i-specs_by_name","(name)",""],["specs_changed?","Bundler::Definition","Bundler/Definition.html#method-i-specs_changed-3F","(source, &block)","<p>Check if the specs of the given source changed according to the locked\nsource. A block should be in order …\n"],["specs_for","Bundler::Definition","Bundler/Definition.html#method-i-specs_for","(groups)",""],["specs_path","Bundler","Bundler.html#method-i-specs_path","()",""],["start","Bundler::CLI","Bundler/CLI.html#method-c-start","(*)",""],["start","Bundler::Resolver","Bundler/Resolver.html#method-i-start","(reqs)",""],["state_any?","Bundler::Resolver","Bundler/Resolver.html#method-i-state_any-3F","(state)",""],["status_code","Bundler::BundlerError","Bundler/BundlerError.html#method-c-status_code","(code)",""],["stop","Bundler::ParallelWorkers::Worker","Bundler/ParallelWorkers/Worker.html#method-i-stop","()","<p>Stop the forked workers and started threads\n"],["stop_threads","Bundler::ParallelWorkers::Worker","Bundler/ParallelWorkers/Worker.html#method-i-stop_threads","()","<p>Stop the worker threads by sending a poison object down the request queue\nso as worker threads after …\n"],["stop_workers","Bundler::ParallelWorkers::UnixWorker","Bundler/ParallelWorkers/UnixWorker.html#method-i-stop_workers","()","<p>Kill the forked workers by sending SIGINT to them\n"],["stop_workers","Bundler::ParallelWorkers::Worker","Bundler/ParallelWorkers/Worker.html#method-i-stop_workers","()","<p>To be overridden by child classes\n"],["strip_leading_spaces","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-strip_leading_spaces","(text)",""],["stub_rubygems","Bundler::RubygemsIntegration::Legacy","Bundler/RubygemsIntegration/Legacy.html#method-i-stub_rubygems","(specs)",""],["stub_source_index","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-stub_source_index","(specs)",""],["successify","Bundler::Resolver","Bundler/Resolver.html#method-i-successify","(activated)",""],["sudo","Bundler","Bundler.html#method-i-sudo","(str)",""],["system_bindir","Bundler","Bundler.html#method-i-system_bindir","()",""],["tag_version","Bundler::GemHelper","Bundler/GemHelper.html#method-i-tag_version","()",""],["tell_me","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-tell_me","(msg, color = nil, newline = nil)","<p>valimism\n"],["tmp","Bundler","Bundler.html#method-i-tmp","(name = Process.pid.to_s)",""],["to_a","Bundler::SpecSet","Bundler/SpecSet.html#method-i-to_a","()",""],["to_ary","Bundler::LazySpecification","Bundler/LazySpecification.html#method-i-to_ary","()",""],["to_bool","Bundler::Settings","Bundler/Settings.html#method-i-to_bool","(value)",""],["to_definition","Bundler::Dsl","Bundler/Dsl.html#method-i-to_definition","(lockfile, unlock)",""],["to_gemfile","Gem::Specification","Gem/Specification.html#method-i-to_gemfile","(path = nil)",""],["to_hash","Bundler::SpecSet","Bundler/SpecSet.html#method-i-to_hash","()",""],["to_lock","Bundler::Definition","Bundler/Definition.html#method-i-to_lock","()",""],["to_lock","Bundler::Dependency","Bundler/Dependency.html#method-i-to_lock","()",""],["to_lock","Bundler::LazySpecification","Bundler/LazySpecification.html#method-i-to_lock","()",""],["to_lock","Bundler::Source::Git","Bundler/Source/Git.html#method-i-to_lock","()",""],["to_lock","Bundler::Source::Path","Bundler/Source/Path.html#method-i-to_lock","()",""],["to_lock","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-to_lock","()",""],["to_lock","Gem::Dependency","Gem/Dependency.html#method-i-to_lock","()",""],["to_s","Bundler::DepProxy","Bundler/DepProxy.html#method-i-to_s","()",""],["to_s","Bundler::LazySpecification","Bundler/LazySpecification.html#method-i-to_s","()",""],["to_s","Bundler::Resolver::SpecGroup","Bundler/Resolver/SpecGroup.html#method-i-to_s","()",""],["to_s","Bundler::RubyVersion","Bundler/RubyVersion.html#method-i-to_s","()",""],["to_s","Bundler::Source::Git","Bundler/Source/Git.html#method-i-to_s","()",""],["to_s","Bundler::Source::Path","Bundler/Source/Path.html#method-i-to_s","()",""],["to_s","Bundler::Source::Rubygems","Bundler/Source/Rubygems.html#method-i-to_s","()",""],["to_specs","Bundler::Resolver::SpecGroup","Bundler/Resolver/SpecGroup.html#method-i-to_specs","()",""],["to_yaml_properties","Gem::Dependency","Gem/Dependency.html#method-i-to_yaml_properties","()",""],["trace","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-trace","(e, newline = nil)",""],["trace","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-trace","(message, newline = nil)",""],["tsort_each_child","Bundler::SpecSet","Bundler/SpecSet.html#method-i-tsort_each_child","(s)",""],["tsort_each_node","Bundler::SpecSet","Bundler/SpecSet.html#method-i-tsort_each_node","()",""],["type","Bundler::DepProxy","Bundler/DepProxy.html#method-i-type","()",""],["ui","Bundler","Bundler.html#method-i-ui","()",""],["ui=","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-ui-3D","(obj)",""],["unlock!","Bundler::Source::Git","Bundler/Source/Git.html#method-i-unlock-21","()",""],["unmet_dependency_names","Bundler::Index","Bundler/Index.html#method-i-unmet_dependency_names","()","<p>returns a list of the dependencies\n"],["update","Bundler::CLI","Bundler/CLI.html#method-i-update","(*gems)",""],["update","Bundler::Environment","Bundler/Environment.html#method-i-update","(*gems)",""],["upgrade_lockfile","Bundler","Bundler.html#method-i-upgrade_lockfile","()",""],["uri","Bundler::Fetcher","Bundler/Fetcher.html#method-i-uri","()",""],["uri_escaped","Bundler::Source::Git::GitProxy","Bundler/Source/Git/GitProxy.html#method-i-uri_escaped","()","<p>Escape the URI for git commands\n"],["uri_hash","Bundler::Source::Git","Bundler/Source/Git.html#method-i-uri_hash","()",""],["use","Bundler::Index","Bundler/Index.html#method-i-use","(other, override_dupes = false)",""],["use_api","Bundler::Fetcher","Bundler/Fetcher.html#method-i-use_api","()",""],["user_agent","Bundler::Fetcher","Bundler/Fetcher.html#method-i-user_agent","()",""],["user_bundle_path","Bundler","Bundler.html#method-i-user_bundle_path","()",""],["user_home","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-user_home","()",""],["valid_for?","Bundler::SpecSet","Bundler/SpecSet.html#method-i-valid_for-3F","(deps)",""],["valid_keys","Bundler::Dsl","Bundler/Dsl.html#method-i-valid_keys","()",""],["validate_ruby!","Bundler::Definition","Bundler/Definition.html#method-i-validate_ruby-21","()",""],["version","Bundler::CLI","Bundler/CLI.html#method-i-version","()",""],["version","Bundler::GemHelper","Bundler/GemHelper.html#method-i-version","()",""],["version","Bundler::Resolver::SpecGroup","Bundler/Resolver/SpecGroup.html#method-i-version","()",""],["version","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-c-version","()",""],["version","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-version","()",""],["version","Bundler::SystemRubyVersion","Bundler/SystemRubyVersion.html#method-i-version","()",""],["version_conflict","Bundler::Resolver","Bundler/Resolver.html#method-i-version_conflict","()",""],["version_message","Bundler::Source","Bundler/Source.html#method-i-version_message","(spec)",""],["version_tag","Bundler::GemHelper","Bundler/GemHelper.html#method-i-version_tag","()",""],["viz","Bundler::CLI","Bundler/CLI.html#method-i-viz","()",""],["viz","Bundler::Graph","Bundler/Graph.html#method-i-viz","()",""],["warn","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-warn","(msg, newline = nil)",""],["warn","Bundler::UI::Silent","Bundler/UI/Silent.html#method-i-warn","(message, newline = nil)",""],["warn_if_root","Bundler::CLI::Install","Bundler/CLI/Install.html#method-i-warn_if_root","()",""],["well_formed_dependency","Bundler::Fetcher","Bundler/Fetcher.html#method-i-well_formed_dependency","(name, *requirements)",""],["which","Bundler","Bundler.html#method-i-which","(executable)",""],["with_build_args","Bundler::RubygemsIntegration","Bundler/RubygemsIntegration.html#method-i-with_build_args","(args)",""],["with_clean_env","Bundler","Bundler.html#method-i-with_clean_env","()",""],["with_clean_git_env","Bundler::SharedHelpers","Bundler/SharedHelpers.html#method-i-with_clean_git_env","(&block)",""],["with_friendly_errors","Bundler","Bundler.html#method-c-with_friendly_errors","()",""],["with_original_env","Bundler","Bundler.html#method-i-with_original_env","()",""],["without","Bundler::Settings","Bundler/Settings.html#method-i-without","()",""],["without=","Bundler::Settings","Bundler/Settings.html#method-i-without-3D","(array)",""],["without_groups_message","Bundler::CLI::Common","Bundler/CLI/Common.html#method-c-without_groups_message","()",""],["without_groups_messages","Bundler::CLI::Install","Bundler/CLI/Install.html#method-i-without_groups_messages","()",""],["without_groups_messages","Bundler::CLI::Update","Bundler/CLI/Update.html#method-i-without_groups_messages","()",""],["word_wrap","Bundler::UI::Shell","Bundler/UI/Shell.html#method-i-word_wrap","(text, line_width = @shell.terminal_width)",""],["work","Bundler::ParallelWorkers::UnixWorker::JobHandler","Bundler/ParallelWorkers/UnixWorker/JobHandler.html#method-i-work","(obj)",""],["worker_pool","Bundler::ParallelWorkers","Bundler/ParallelWorkers.html#method-c-worker_pool","(size, job)",""],["write","Bundler::Env","Bundler/Env.html#method-i-write","(io)",""],["x64_mingw?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-x64_mingw-3F","()",""],["x64_mingw_20?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-x64_mingw_20-3F","()",""],["x64_mingw_21?","Bundler::CurrentRuby","Bundler/CurrentRuby.html#method-i-x64_mingw_21-3F","()",""],["bundle","","lib/bundler/man/bundle.html","","<p>.&quot; generated with Ronn/v0.7.3 .&quot;\ngithub.com/rtomayko/ronn/tree/0.7.3 . .TH “BUNDLE” …\n"],["bundle-config","","lib/bundler/man/bundle-config.html","","<p>.&quot; generated with Ronn/v0.7.3 .&quot;\ngithub.com/rtomayko/ronn/tree/0.7.3 . .TH “BUNDLE-CONFIG” …\n"],["bundle-config","","lib/bundler/man/bundle-config_txt.html","","<p>BUNDLE-CONFIG(1)                                             \nBUNDLE-CONFIG(1)\n<p>NAME\n\n<pre>bundle-config - Set ...</pre>\n"],["bundle-exec","","lib/bundler/man/bundle-exec.html","","<p>.&quot; generated with Ronn/v0.7.3 .&quot;\ngithub.com/rtomayko/ronn/tree/0.7.3 . .TH “BUNDLE-EXEC” …\n"],["bundle-exec","","lib/bundler/man/bundle-exec_txt.html","","<p>BUNDLE-EXEC(1)                                                 \nBUNDLE-EXEC(1)\n<p>NAME\n\n<pre>bundle-exec - Execute ...</pre>\n"],["bundle-install","","lib/bundler/man/bundle-install.html","","<p>.&quot; generated with Ronn/v0.7.3 .&quot;\ngithub.com/rtomayko/ronn/tree/0.7.3 . .TH “BUNDLE-INSTALL” …\n"],["bundle-install","","lib/bundler/man/bundle-install_txt.html","","<p>BUNDLE-INSTALL(1)                                           \nBUNDLE-INSTALL(1)\n<p>NAME\n\n<pre>bundle-install - Install ...</pre>\n"],["bundle-package","","lib/bundler/man/bundle-package.html","","<p>.&quot; generated with Ronn/v0.7.3 .&quot;\ngithub.com/rtomayko/ronn/tree/0.7.3 . .TH “BUNDLE-PACKAGE” …\n"],["bundle-package","","lib/bundler/man/bundle-package_txt.html","","<p>BUNDLE-PACKAGE(1)                                           \nBUNDLE-PACKAGE(1)\n<p>NAME\n\n<pre>bundle-package - Package ...</pre>\n"],["bundle-platform","","lib/bundler/man/bundle-platform.html","","<p>.&quot; generated with Ronn/v0.7.3 .&quot;\ngithub.com/rtomayko/ronn/tree/0.7.3 . .TH “BUNDLE-PLATFORM” …\n"],["bundle-platform","","lib/bundler/man/bundle-platform_txt.html","","<p>BUNDLE-PLATFORM(1)                                         \nBUNDLE-PLATFORM(1)\n<p>NAME\n\n<pre>bundle-platform - Displays ...</pre>\n"],["bundle-update","","lib/bundler/man/bundle-update.html","","<p>.&quot; generated with Ronn/v0.7.3 .&quot;\ngithub.com/rtomayko/ronn/tree/0.7.3 . .TH “BUNDLE-UPDATE” …\n"],["bundle-update","","lib/bundler/man/bundle-update_txt.html","","<p>BUNDLE-UPDATE(1)                                             \nBUNDLE-UPDATE(1)\n<p>NAME\n\n<pre>bundle-update - Update ...</pre>\n"],["bundle","","lib/bundler/man/bundle_txt.html","","<p>BUNDLE(1)                                                           \nBUNDLE(1)\n<p>NAME\n\n<pre>bundle - Ruby Dependency ...</pre>\n"],["gemfile.5","","lib/bundler/man/gemfile_5.html","","<p>.&quot; generated with Ronn/v0.7.3 .&quot;\ngithub.com/rtomayko/ronn/tree/0.7.3 . .TH “GEMFILE” …\n"],["gemfile.5","","lib/bundler/man/gemfile_5_txt.html","","<p>GEMFILE(5)                                                         \nGEMFILE(5)\n<p>NAME\n\n<pre>Gemfile - A format ...</pre>\n"],["Executable","","lib/bundler/templates/Executable.html","","<p>#!/usr/bin/env &lt;%= Bundler.settings || RbConfig::CONFIG %&gt; # # This\nfile was generated by Bundler …\n"],["Executable.standalone","","lib/bundler/templates/Executable_standalone.html","","<p>#!/usr/bin/env &lt;%= Bundler.settings || RbConfig::CONFIG %&gt; # # This\nfile was generated by Bundler …\n"],["Gemfile","","lib/bundler/templates/Gemfile.html","","<p># A sample Gemfile source “rubygems.org”\n<p># gem “rails”\n"],["Gemfile.tt","","lib/bundler/templates/newgem/Gemfile_tt.html","","<p>source ‘rubygems.org’\n<p># Specify your gem’s dependencies in &lt;%=config%&gt;.gemspec gemspec\n"],["LICENSE.txt.tt","","lib/bundler/templates/newgem/LICENSE_txt_tt.html","","<p>Copyright © &lt;%=Time.now.year%&gt; &lt;%=config%&gt;\n<p>MIT License\n<p>Permission is hereby granted, free …\n"],["README.md.tt","","lib/bundler/templates/newgem/README_md_tt.html","","<p>&lt;%=config%&gt;\n<p>TODO: Write a gem description\n<p>Installation\n"],["Rakefile.tt","","lib/bundler/templates/newgem/Rakefile_tt.html","","<p>require “bundler/gem_tasks” &lt;% if config == ‘minitest’ -%&gt; require\n“rake/testtask” …\n"],["newgem.tt","","lib/bundler/templates/newgem/bin/newgem_tt.html","","<p>#!/usr/bin/env ruby\n<p>require ‘&lt;%= config %&gt;’\n"],["extconf.rb.tt","","lib/bundler/templates/newgem/ext/newgem/extconf_rb_tt.html","","<p>require “mkmf”\n<p>create_makefile(<%=config.inspect%&gt;)\n"],["newgem.c.tt","","lib/bundler/templates/newgem/ext/newgem/newgem_c_tt.html","","<p>#include “&lt;%=config%&gt;.h”\n<p>VALUE rb_m<%=config.join%&gt;;\n<p>void Init_<%=config%&gt;(void) …\n"],["newgem.h.tt","","lib/bundler/templates/newgem/ext/newgem/newgem_h_tt.html","","<p>ifndef &lt;%=config.upcase%&gt;_H define &lt;%=config.upcase%&gt;_H 1\ninclude “ruby.h” endif …\n"],["gitignore.tt","","lib/bundler/templates/newgem/gitignore_tt.html","","<p>*.gem *.rbc .bundle .config .yardoc Gemfile.lock InstalledFiles _yardoc\ncoverage doc/ lib/bundler/man …\n"],["newgem.rb.tt","","lib/bundler/templates/newgem/lib/newgem_rb_tt.html","","<p>require “&lt;%=config%&gt;/version” &lt;%- if config -%&gt; require\n“&lt;%=config%&gt;/&lt;%= …\n"],["version.rb.tt","","lib/bundler/templates/newgem/lib/newgem/version_rb_tt.html","","<p>&lt;%- config.each_with_index do |c,i| -%&gt; &lt;%= ‘  ’*i %&gt;module\n&lt;%= c %&gt; &lt;%- end -%&gt; …\n"],["newgem.gemspec.tt","","lib/bundler/templates/newgem/newgem_gemspec_tt.html","","<p>lib = File.expand_path(‘../lib’, __FILE__) $LOAD_PATH.unshift(lib) unless\n$LOAD_PATH.include?(lib) require …\n"],["rspec.tt","","lib/bundler/templates/newgem/rspec_tt.html","","<p>–format documentation –color\n"],["newgem_spec.rb.tt","","lib/bundler/templates/newgem/spec/newgem_spec_rb_tt.html","","<p>require ‘spec_helper’\n<p>describe &lt;%= config %&gt; do\n\n<pre>it 'has a version number' do\n  expect(&lt;%= config[:constant_name] ...</pre>\n"],["spec_helper.rb.tt","","lib/bundler/templates/newgem/spec/spec_helper_rb_tt.html","","<p>$LOAD_PATH.unshift File.expand_path(‘../../lib’, __FILE__) require ‘&lt;%=\nconfig %&gt;’\n"],["minitest_helper.rb.tt","","lib/bundler/templates/newgem/test/minitest_helper_rb_tt.html","","<p>$LOAD_PATH.unshift File.expand_path(‘../../lib’, __FILE__) require ‘&lt;%=\nconfig %&gt;’\n<p>require ‘minitest/autorun’ …\n"],["test_newgem.rb.tt","","lib/bundler/templates/newgem/test/test_newgem_rb_tt.html","","<p>require ‘minitest_helper’\n<p>class Test&lt;%= config %&gt; &lt; MiniTest::Unit::TestCase\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">test_that_it_has_a_version_number</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"]]}}